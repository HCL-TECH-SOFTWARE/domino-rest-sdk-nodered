{"openapi":"3.0.2","info":{"contact":{"email":"HeyHCL@pnp-hcl.com","name":"HCL America Inc","url":"https://opensource.hcltechsw.com/Domino-rest-api/"},"description":"REST APIs for Domino and more done right. With declarative security and access to Code, Design and Data","license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0"},"title":"HCL Domino REST API basis","version":"1.2.1"},"servers":[{"description":"Actual Server","url":"https://frascati.projectkeep.io/api/v1"},{"description":"Keep enabled server","url":"/api/v1"}],"paths":{"/apps":{"description":"Only Application Name/client_name, description, icon/logo_uri, Application URL/client_uri to be shown to be able to render the Domino REST API landing page","get":{"description":"Return Application Name/client_name, Description, Icon/logo_URI, Application URL/client_uri of active OAuth applications","operationId":"fetchApps","responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AppInfo"},"type":"array"}}},"description":"List of active apps"}},"security":[{}],"summary":"Get the list of configured OAuth applications","tags":["admin"],"x-keep-version":1},"summary":"Short list of OAuth applications"},"/attachmentnames/{unid}":{"description":"Get an array of file names from a document.","get":{"description":"Retrieves a list of all attachments on a document","operationId":"getDocumentAttachmentNames","responses":{"200":{"description":"success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Get all attachment names on a document.","tags":["data"],"x-keep-version":1},"parameters":[{"description":"If set to true will also parse the RichText fields for embedded files and return their path. This path can be used as the attachment name with the GET /attachments/{unid}/{attachmentName} to download the file.","in":"query","name":"includeEmbedded","required":false,"schema":{"type":"boolean"}},{"description":"Keep alias for the database to be queried","in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Universal Id of the document to be acted upon","in":"path","name":"unid","required":true,"schema":{"type":"string"}}],"summary":"Get an array of file names from a document."},"/attachments/{unid}":{"description":"Add an attachment to a document","parameters":[{"description":"Name of the field in which the attachment resides. Pass this to remove the hotspot for the attachment from that rich text field, otherwise the hotspot will remain. If the attachment is attached directly to the document, not a field, there is not need to do this.","in":"query","name":"fieldName","required":false,"schema":{"type":"string"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Universal Id of the document to be acted upon","examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"in":"path","name":"unid","required":true,"schema":{"type":"string"}}],"post":{"description":"The filename passed will be used, if unique. Otherwise a unique name will be evaluated from the passed filename.","operationId":"createDocumentAttachment","parameters":[{"description":"Name of the rich text field to attach this attachment to.  If this is left off the attachment is attached to the document.","in":"query","name":"fieldName","schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"properties":{"filename":{"items":{"format":"binary","type":"string"},"type":"array"}},"type":"object"}}},"description":"It's a file requested. The fieldName is not required. ","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"MultipleAttachments":{"value":{"filenames":["myFile.xlsx","myFile2.xlsx"],"status":"upload complete"}},"SingleAttachment":{"value":{"filename":"myFile.xlsx","status":"upload complete"}}},"schema":{"$ref":"#/components/schemas/AttachmentsUNIDResponseMessage"}}},"description":"Success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Creates a new attachment in an existing document","tags":["data"],"x-keep-version":1},"summary":"Add an attachment to a document"},"/attachments/{unid}/{attachmentName}":{"delete":{"description":"Remove the attachment for the document","operationId":"deleteDocumentAttachment","parameters":[{"description":"Name of the field in which the attachment resides. Pass this to remove the hotspot for the attachment from that rich text field, otherwise the hotspot will remain. If the attachment is attached directly to the document, not a field, there is not need to do this.","in":"query","name":"fieldName","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"complete":{"value":{"details":{"appId":"1fe2cd-ac38-26c7d6"},"message":"deletion complete","status":"OK","statusCode":200,"unid":"61CCE871E79E8DDB8025852F004DFF2D"}}},"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Success"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Removes an attachment","tags":["data"],"x-keep-version":1},"description":"Retrieve a document's attachment","get":{"description":"Get the attachment of a document","operationId":"getDocumentAttachment","responses":{"200":{"description":"Successful retrieval\nResponse does not contain a media type since a media type of an attachment can be any type.\nFor a list of well defined media types check the available documentation:\nhttps://www.iana.org/assignments/media-types/media-types.xhtml\n"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Retrieve a document's attachment","tags":["data"],"x-keep-version":1},"parameters":[{"description":"Name of the attachment","examples":{"attachmentName":{"value":"myFile.xlsx"}},"in":"path","name":"attachmentName","required":true,"schema":{"type":"string"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Universal Id of the document to be acted upon","examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"in":"path","name":"unid","required":true,"schema":{"type":"string"}}],"summary":"Retrieve a document's attachment"},"/auth":{"description":"Auxilary login for users who exist in Domino with HTTP passwords","post":{"description":"Login and retrieve JWT token","operationId":"authLogin","requestBody":{"content":{"application/json":{"examples":{"AuthLogin":{"value":{"password":"AdminPassword","username":"AdminName"}}},"schema":{"$ref":"#/components/schemas/BasicAuthRequest"}}},"description":"Username and password in Json format","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResult"}}},"description":"Successful authentication"},"401":{"content":{"application/json":{"examples":{"Unauthorized":{"value":{"message":"Invalid credentials or account locked","status":401}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"Unauthorized"}},"security":[{}],"summary":"Get JWT Session","tags":["authentication"],"x-keep-scope":"ANY","x-keep-version":1},"summary":"Get an JWT session for a given user"},"/auth/basic":{"description":"Exchange a basic auth for a JWT Token in the JSON response.\nUse for troubled APIs","get":{"description":"Submit username and password in an authentication header and get valid JWT in return","operationId":"authLoginBasic","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResult"}}},"description":"Successful auth"},"401":{"description":"Wrong credentials"}},"security":[{"basic":[]}],"summary":"Get identity information","tags":["authentication"],"x-keep-scope":"ANY","x-keep-version":5},"summary":"Login using basic, get back JWT"},"/auth/extend":{"description":"Replace JWT to extend session","post":{"description":"Get a new JWT for processing","operationId":"authRenewJwt","requestBody":{"content":{"application/json":{"examples":{"AuthExtend":{"value":{"bearer":"{{AUTH_KEY}}"}}},"schema":{"$ref":"#/components/schemas/AuthResult"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResult"}}},"description":"Successful renew"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"}},"security":[{"jwt":[]}],"summary":"Get a new JWT for processing","tags":["authentication"],"x-keep-scope":"ANY","x-keep-version":5},"summary":"Replace JWT to extend session"},"/auth/logout":{"description":"Log out a current JWT based user","get":{"description":"Invalidates token in header. Only use this operation when GET for logout is really needed, otherwise it is recommended to use POST operation for logout.","operationId":"authLogoutGet","responses":{"200":{"content":{"application/json":{"examples":{"logout":{"value":{"message":"CN=John Doe/O=ProjectKeep logged out (0 days, 1 hours, 59 minutes, 40 seconds.)","status":200,"statusText":"OK"}}},"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Logout body, fixed format"}},"security":[{"jwt":[]}],"summary":"Logout and invalidate token.","tags":["authentication"],"x-keep-scope":"ANY","x-keep-version":1},"post":{"description":"Logout and invalidate token","operationId":"authLogout","requestBody":{"content":{"application/json":{"examples":{"AuthLogout":{"value":{"logout":"Yes"}}},"schema":{"$ref":"#/components/schemas/LogoutBody"}}},"description":"Logout body, fixed format","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"logout":{"value":{"message":"CN=John Doe/O=ProjectKeep logged out (0 days, 1 hours, 59 minutes, 40 seconds.)","status":200,"statusText":"OK"}}},"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Successful logout"}},"security":[{"jwt":[]}],"summary":"Logout and invalidate token","tags":["authentication"],"x-keep-scope":"ANY","x-keep-version":1},"summary":"Log out a current JWT based user"},"/authforoauthflow":{"description":"Auxilary login for use with OAuth flow to process the consent screen","post":{"description":"Username, Password & scope = \"oauth\" are required to use this endpoint","operationId":"loginForOAuthFlow","requestBody":{"content":{"application/json":{"examples":{"AuthLogin":{"value":{"password":"{{AdminPassword}}","scope":"oauth","username":"{{AdminName}}"}}},"schema":{"$ref":"#/components/schemas/BasicAuthForOauthFlow"}}},"description":"Username and password in Json format","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResult"}}},"description":"Successful authentication"},"401":{"content":{"application/json":{"examples":{"Unauthorized":{"value":{"message":"Invalid credentials or account locked","status":401}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"Unauthorized"}},"security":[{}],"summary":"Get JWT Session for OAuth consent screen","tags":["authentication"],"x-keep-scope":"ANY","x-keep-version":1},"summary":"Get an JWT session for a given user"},"/bulk/create":{"description":"Create multiple documents with a single call","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"The format RichText fields will be returned.  The default if unspecified is mime.","in":"query","name":"richTextAs","schema":{"$ref":"#/components/schemas/RichTextRepresentation"}}],"post":{"description":"Create multiple documents in a request","operationId":"bulkCreateDocuments","requestBody":{"content":{"application/json":{"examples":{"SampleBulkCreateDocuments":{"value":{"documents":[{"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"}]}}},"schema":{"$ref":"#/components/schemas/BulkCreateDocuments"}}},"description":"Object with array property documents","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"SampleResponse":{"value":[{"@created":"2022-03-29T20:14:35+08:00","@etag":"W/\" 6242f82b\"","@lastaccessed":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-29T20:14:35+08:00","@noteid":6658,"@size":99,"@unid":"81E039D456E028D3482588140043410B","@unread":true,"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@created":"2022-03-29T20:14:35+08:00","@etag":"W/\" 6242f82b\"","@lastaccessed":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-29T20:14:35+08:00","@noteid":6662,"@size":99,"@unid":"597042E199754897482588140043410D","@unread":true,"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@created":"2022-03-29T20:14:35+08:00","@etag":"W/\" 6242f82b\"","@lastaccessed":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-29T20:14:35+08:00","@noteid":6666,"@size":99,"@unid":"D2E9CF578D0B3844482588140043410F","@unread":true,"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@created":"2022-03-29T20:14:35+08:00","@etag":"W/\" 6242f82b\"","@lastaccessed":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-29T20:14:35+08:00","@noteid":6670,"@size":99,"@unid":"05B08E4A7874C01E4825881400434111","@unread":true,"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"},{"@created":"2022-03-29T20:14:35+08:00","@etag":"W/\" 6242f82b\"","@lastaccessed":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-29T20:14:35+08:00","@noteid":6674,"@size":99,"@unid":"D650B4BF0DE3BB714825881400434113","@unread":true,"Color":"Purple","Form":"TestForm","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp"}]}},"schema":{"items":{"type":"object"},"type":"array"}}},"description":"Creation result. Returns success / failure for each document"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Create multiple documents in a single call","tags":["data"],"x-keep-version":1},"summary":"Create multiple documents with a single call"},"/bulk/delete":{"description":"Delete multiple documents with a single call","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"post":{"description":"Delete multiple documents in a request","operationId":"bulkDeleteDocuments","requestBody":{"content":{"application/json":{"examples":{"SampleBulkDelete":{"value":{"mode":"default","unids":["81E039D456E028D3482588140043410B","F6392938B2A8D0144825881400349085"]}},"SampleBulkDeleteWithoutMode":{"value":{"unids":["81E039D456E028D3482588140043410B","F6392938B2A8D0144825881400349085"]}}},"schema":{"$ref":"#/components/schemas/BulkUnids"}}},"description":"Object with mode and array document UNIDs. ","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"SampleBulkDeleteResponse":{"value":[{"message":"Document 81E039D456E028D3482588140043410B deleted","status":200,"statusText":"OK","unid":"81E039D456E028D3482588140043410B"},{"message":"Document F6392938B2A8D0144825881400349085 deleted","status":200,"statusText":"OK","unid":"F6392938B2A8D0144825881400349085"}]}},"schema":{"items":{"type":"object"},"type":"array"}}},"description":"Creation result. Returns success / failure for each document"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Delete multiple documents in a single call","tags":["data"],"x-keep-version":1},"summary":"Delete multiple documents with a single call"},"/bulk/etag":{"description":"Determine whether multiple documents exist with a single call by unids, returning ETags","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"post":{"description":"Determine whether multiple documents exist with a single call by unids, returning ETags","operationId":"bulkDocumentEtagByUnid","requestBody":{"content":{"application/json":{"examples":{"SampleBulkGetDocByUNIDNoMode":{"value":{"unids":["05B08E4A7874C01E4825881400434111","D2E9CF578D0B3844482588140043410F","D650B4BF0DE3BB714825881400434113"]}},"SampleBulkGetDocumentByUNID":{"value":{"mode":"default","unids":["05B08E4A7874C01E4825881400434111","D2E9CF578D0B3844482588140043410F","D650B4BF0DE3BB714825881400434113"]}}},"schema":{"$ref":"#/components/schemas/BulkUnids"}}},"description":"Object with mode and array document UNIDs.","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"SampleResponse":{"value":{"D2E9CF578D0B3844482588140043410F":"W/\" 6243a80a\""}}},"schema":{"$ref":"#/components/schemas/DocumentExistencePayload"}}},"description":"Existence check result. Returns status and ETag for each document, keyed by UNID"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Determine whether multiple documents exist with a single call by unids, returning ETags","tags":["data"],"x-keep-version":1},"summary":"Determine whether multiple documents exist with a single call by unids, returning ETags"},"/bulk/folder":{"description":"Adds or removes documents from a folder","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"post":{"description":"Adds or removes documents from a folder","operationId":"bulkDocumentFolderByUnid","requestBody":{"content":{"application/json":{"examples":{"SampleBulkGetDocByUNIDNoMode":{"value":{"unids":["05B08E4A7874C01E4825881400434111","D2E9CF578D0B3844482588140043410F","D650B4BF0DE3BB714825881400434113"]}},"SampleBulkGetDocumentByUNID":{"value":{"mode":"default","unids":["05B08E4A7874C01E4825881400434111","D2E9CF578D0B3844482588140043410F","D650B4BF0DE3BB714825881400434113"]}}},"schema":{"$ref":"#/components/schemas/BulkFolderDocuments"}}},"description":"Object with mode and array document UNIDs.","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"SampleResponse":{"value":{"D2E9CF578D0B3844482588140043410F":"W/\" 6243a80a\""}}},"schema":{"items":{"$ref":"#/components/schemas/StatusMessage"},"type":"array"}}},"description":"Existence check result. Returns status for each document, keyed by UNID"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Adds or removes documents from a folder","tags":["data"],"x-keep-version":1},"summary":"Adds or removes documents from a folder"},"/bulk/unid":{"description":"Retrieve multiple documents with a single call by unids","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"The format RichText fields will be returned.  The default if unspecified is mime.","examples":{"RichTextAsMime":{"value":"mime"}},"in":"query","name":"richTextAs","schema":{"$ref":"#/components/schemas/RichTextRepresentation"}},{"description":"When set to false, all Json items on the top level of an object get suppressed.\nDefault is true","in":"query","name":"meta","schema":{"type":"boolean"}}],"post":{"description":"Retrieve multiple documents in a single call by unid","operationId":"bulkGetDocumentsByUnid","parameters":[{"description":"When set to false, all metadata Json items on the top level of an object get suppressed.\nDefault is true","in":"query","name":"meta","schema":{"type":"boolean"}}],"requestBody":{"content":{"application/json":{"examples":{"Request with mode":{"value":{"mode":"mymode","unids":["1CC22F3EF91B466200258A3100584D9B","20E0116E35C1A29300258A3100587BB4","8D2CFCF259A6197E00258A31004F8853"]}},"SampleBulkGetDocByUNIDNoMode":{"value":{"unids":["05B08E4A7874C01E4825881400434111","D2E9CF578D0B3844482588140043410F","D650B4BF0DE3BB714825881400434113"]}},"SampleBulkGetDocumentByUNID":{"value":{"mode":"default","unids":["05B08E4A7874C01E4825881400434111","D2E9CF578D0B3844482588140043410F","D650B4BF0DE3BB714825881400434113"]}}},"schema":{"$ref":"#/components/schemas/BulkUnids"}}},"description":"Object with mode and array document UNIDs.","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"SampleResponse":{"value":[{"@created":"2022-03-29T20:14:35+08:00","@etag":"W/\" 6243a80a\"","@lastaccessed":"2022-03-30T08:44:58+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@noteid":6666,"@size":134,"@unid":"D2E9CF578D0B3844482588140043410F","@unread":true,"Color":"Purple","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","form":"TestForm"},{"@created":"2022-03-29T20:14:35+08:00","@etag":"W/\" 6243a80a\"","@lastaccessed":"2022-03-30T08:44:58+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@noteid":6670,"@size":134,"@unid":"05B08E4A7874C01E4825881400434111","@unread":false,"Color":"Purple","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","form":"TestForm"},{"@created":"2022-03-29T20:14:35+08:00","@etag":"W/\" 6243a80a\"","@lastaccessed":"2022-03-30T08:44:58+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@noteid":6674,"@size":134,"@unid":"D650B4BF0DE3BB714825881400434113","@unread":false,"Color":"Purple","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","form":"TestForm"}]}},"schema":{"items":{"type":"object"},"type":"array"}}},"description":"Creation result. Returns success / failure for each document"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Retrieve multiple documents in a single call by unid","tags":["data"],"x-keep-version":1},"summary":"Retrieve multiple documents with a single call by unids"},"/bulk/update":{"description":"Update multiple documents with a single call","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"The format RichText fields will be returned.  The default if unspecified is mime.","in":"query","name":"richTextAs","schema":{"$ref":"#/components/schemas/RichTextRepresentation"}}],"patch":{"description":"Update multiple documents in a single call","operationId":"bulkUpdateDocumentsByQuery","requestBody":{"content":{"application/json":{"examples":{"SampleBulkUpdate":{"value":{"maxScanDocs":500000,"maxScanEntries":200000,"mode":"default","noViews":false,"query":"Form = 'TestForm' and first_name = 'Kristoffer' and last_name = 'Aaronsohn'","replaceItems":{"first_name":"TestName"},"returnUpdatedDocument":false,"timeoutSecs":300,"viewRefresh":true}}},"schema":{"$ref":"#/components/schemas/BulkUpdateDocuments"}}},"description":"Object with query, mode and fields to update","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"SampleBulkUpdateResponse":{"value":[{"@created":"2022-03-29T20:14:35+08:00","@etag":"W/\" 6243a80a\"","@lastaccessed":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@noteid":6666,"@size":124,"@unid":"D2E9CF578D0B3844482588140043410F","@unread":true,"Color":"Purple","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","form":"TestForm"},{"@created":"2022-03-29T20:14:35+08:00","@etag":"W/\" 6243a80a\"","@lastaccessed":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@noteid":6670,"@size":124,"@unid":"05B08E4A7874C01E4825881400434111","@unread":true,"Color":"Purple","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","form":"TestForm"},{"@created":"2022-03-29T20:14:35+08:00","@etag":"W/\" 6243a80a\"","@lastaccessed":"2022-03-29T20:14:35+08:00","@lastmodified":"2022-03-30T08:44:58+08:00","@noteid":6674,"@size":124,"@unid":"D650B4BF0DE3BB714825881400434113","@unread":true,"Color":"Purple","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","form":"TestForm"}]}},"schema":{"items":{"type":"object"},"type":"array"}}},"description":"Update result. Returns success / failure for each document"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Update multiple documents in a single call","tags":["data"],"x-keep-version":1},"summary":"Update multiple documents with a single call"},"/consent/revoke/{unid}":{"delete":{"description":"JSON element with consent values,","operationId":"deleteCurrUserConsent","parameters":[{"in":"path","name":"unid","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConsentInfo"}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Revoke a consent using the oauth's unid","tags":["admin"],"x-keep-scope":"ANY","x-keep-version":1}},"/consent/{client_id}":{"description":"Retrieves information about all of the currently-authenticated user's consents based from application id/client_id","get":{"description":"JSON element with consent values,","operationId":"getCurrUserConsent","parameters":[{"in":"path","name":"client_id","required":true,"schema":{"type":"string"}},{"in":"query","name":"scope","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConsentInfo"}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Get information about the currently-authenticated user's consents,","tags":["admin"],"x-keep-scope":"ANY","x-keep-version":1},"summary":"Retrieves information about of the currently-authenticated user's consents based from application id/client_id"},"/consents":{"delete":{"description":"Updates the revoke field of the oauth document.","operationId":"deleteCurrentUserConsents","responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConsentInfo"},"type":"array"}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Revoke all of consents that a user has access to","tags":["admin"],"x-keep-scope":"ANY","x-keep-version":1},"description":"Operation on all of the consent's that a user have access to","get":{"description":"JSON element with consent data","operationId":"getCurrentUserConsents","responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConsentInfo"},"type":"array"}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Get information about the currently-authenticated user's consents,","tags":["admin"],"x-keep-scope":"ANY","x-keep-version":1},"summary":"Operation on all of the consent's that a user have access to"},"/docmeta/{unid}":{"description":"Returns a document's form, creation date, update date, unid, nodeid. Mainly used in Foundry","get":{"description":"Retrieves document meta data including the form name","operationId":"getDocumentMetadata","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentMeta"}}},"description":"Successful retrieval"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Retrieves document meta data including the form name","tags":["data"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Universal Id of the document to be acted upon","examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"in":"path","name":"unid","required":true,"schema":{"type":"string"}}],"summary":"Retrieves document meta data including the form name"},"/document":{"description":"Create a document in the database for a specified form.  And it returns a NotesDocument object that represents the document.","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"The format RichText fields will be returned.  The default if unspecified is mime.","in":"query","name":"richTextAs","schema":{"$ref":"#/components/schemas/RichTextRepresentation"}}],"post":{"description":"Create a new document for a specified form.","operationId":"createDocument","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"UNID of an existing document, to make this a response document","in":"query","name":"parentUnid","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"createDocument":{"value":{"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite"}}},"schema":{"$ref":"#/components/schemas/DocumentSimpleRequest"}}},"description":"Document body in JSON format. Key/value pairs of fields and their values to update, 'Form' is required.\n","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"document":{"value":{"@meta":{"addedtofile":"2022-10-13T13:41:30.68+08:00","created":"2022-10-13T13:41:30.64+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","noteclass":["DATA","DOCUMENT"],"noteid":44026,"revision":"00000001001F442C482588DA","size":570,"unid":"1C62D55D75387684482588DA001F4428","unread":true},"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite"}}},"schema":{"$ref":"#/components/schemas/DominoDocument"}}},"description":"Successful creation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Create a new document for a specified form.","tags":["data"],"x-keep-version":1},"summary":"Create a document in the database for a specified form.  And it returns a NotesDocument object that represents the document."},"/document/{unid}":{"delete":{"description":"Delete the given document","operationId":"deleteDocument","responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"message":"deletion complete","status":"OK","statusCode":200,"unid":"61CCE871E79E8DDB8025852F004DFF2D"}}},"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Returns data from the document"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Delete the given document","tags":["data"],"x-keep-version":1},"description":"Update access to a document will typically restrict which fields on the document can be changed.\n\nModes are used to define statuses for a document, and will a definition identifying which fields can be seen and changed. A patch request that includes fields outside those restrictions will throw a 400 error (bad request), specifying which fields are illegal or missing.","get":{"description":"Retrieve a given document at its appropriate mode","operationId":"getDocument","parameters":[{"description":"Mark the document as read by the current user when the operation completes","in":"query","name":"markRead","schema":{"type":"boolean"}},{"description":"Mark the document as unread by the current user when the operation completes","in":"query","name":"markUnread","schema":{"type":"boolean"}},{"description":"Scope name","examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Should a document be computed with its form's \"Default Value\", \"Input Translation\" and \"Input Validation\" formulas before retrieval","examples":{"compute":{"value":"true"}},"in":"query","name":"computeWithForm","schema":{"type":"boolean"}},{"description":"The format RichText fields will be returned.  The default if unspecified is html.","examples":{"RichTextAsMime":{"value":"mime"}},"in":"query","name":"richTextAs","schema":{"$ref":"#/components/schemas/RichTextRepresentation"}},{"description":"When set to false, all metadata Json items on the top level of an object get suppressed.\nDefault is true","in":"query","name":"meta","schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"examples":{"document":{"value":{"@meta":{"addedtofile":"2022-10-13T13:41:30.68+08:00","created":"2022-10-13T13:41:30.64+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","noteclass":["DATA","DOCUMENT"],"noteid":44026,"revision":"00000001001F442C482588DA","size":570,"unid":"1C62D55D75387684482588DA001F4428","unread":true},"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite"}}},"schema":{"$ref":"#/components/schemas/DominoDocument"}}},"description":"Successful retrieval"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Retrieve a given document at its appropriate mode","tags":["data"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Universal Id of the document to be acted upon","examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"in":"path","name":"unid","required":true,"schema":{"type":"string"}},{"description":"mode to perform the document access in. Defaults to 'default' if missing. All lowercase, no spaces, letters and numbers only","examples":{"ForApprover":{"value":"approver"},"defaultValue":{"value":"default"}},"in":"query","name":"mode","required":false,"schema":{"type":"string"}}],"patch":{"description":"Provide a JSON structure that is a subset of the document items.\nitems not mentioned stay untouched, items with null values are removed","operationId":"patchDocument","parameters":[{"description":"Mark the document as unread by the current user when the operation completes","in":"query","name":"markUnread","schema":{"type":"boolean"}},{"description":"The format RichText fields will be returned.  The default if unspecified is html.","examples":{"RichTextAsMime":{"value":"mime"}},"in":"query","name":"richTextAs","schema":{"$ref":"#/components/schemas/RichTextRepresentation"}},{"description":"This field records the current revision version of document. It's a 32-character hex-encoded string of date. \n\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.","examples":{"revisionSample":{"value":"26372571825596dc0db73d0eacf1eacb"}},"in":"query","name":"revision","schema":{"type":"string"}},{"description":"UNID of an existing document, to make this a response document","in":"query","name":"parentUnid","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSimpleRequest"}}},"required":true},"responses":{"200":{"content":{"application/json":{"examples":{"SampleUpdateDocument":{"value":{"@meta":{"addedtofile":"2022-10-13T13:41:30.68+08:00","created":"2022-10-13T13:41:30.64+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","noteclass":["DATA","DOCUMENT"],"noteid":44026,"revision":"00000001001F442C482588DA","size":570,"unid":"1C62D55D75387684482588DA001F4428","unread":true},"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite"}}},"schema":{"$ref":"#/components/schemas/DominoDocument"}}},"description":"Successful mode operation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Perform a document update on only the fields you specify in the request.","tags":["data"],"x-keep-version":1},"put":{"description":"Perform an update on the document at the relevant mode","operationId":"updateDocument","parameters":[{"description":"Mark the document as unread by the current user when the operation completes","in":"query","name":"markUnread","schema":{"type":"boolean"}},{"description":"The format RichText fields will be returned.  The default if unspecified is html.","examples":{"RichTextAsMime":{"value":"mime"}},"in":"query","name":"richTextAs","schema":{"$ref":"#/components/schemas/RichTextRepresentation"}},{"description":"This field records the current revision version of document. It's a 32-character hex-encoded string of date. \n\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.","examples":{"revisionSample":{"value":"26372571825596dc0db73d0eacf1eacb"}},"in":"query","name":"revision","schema":{"type":"string"}},{"description":"UNID of an existing document, to make this a response document","in":"query","name":"parentUnid","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"UpdateDocument":{"value":{"Color":"Puce","Form":"TestForm","Pet":"Black-capped chickadee","email":"mbranthwaite0@nba.com","first_name":"Madison","gender":"Female","ip_address":"91.254.204.27","last_name":"Branthwaite"}}},"schema":{"$ref":"#/components/schemas/DocumentSimpleRequest"}}},"description":"Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. 'Form' is required.","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"SampleUpdateDocument":{"value":{"@meta":{"addedtofile":"2022-10-13T13:41:30.68+08:00","created":"2022-10-13T13:41:30.64+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","noteclass":["DATA","DOCUMENT"],"noteid":44026,"revision":"00000001001F442C482588DA","size":570,"unid":"1C62D55D75387684482588DA001F4428","unread":true},"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite"}}},"schema":{"$ref":"#/components/schemas/DominoDocument"}}},"description":"Successful mode operation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Perform an update on the document at the relevant mode","tags":["data"],"x-keep-version":1},"summary":"Actions on a document at a specific mode"},"/documentmodes/{unid}":{"description":"Returns a JSON object of all the modes schemas available for the Form tied to this document.\n\nPeople can configure many different modes which have different fields with Read/Write/Both permission.","get":{"description":"Returns the modes available and fields that can be edited","operationId":"getDocumentFormModes","responses":{"200":{"content":{"application/json":{"examples":{"sampleMode":{"value":[{"computeWithForm":false,"deleteAccessFormula":{"formula":"@False","formulaType":"domino"},"fields":[],"modeName":"default","onLoad":{"formula":"","formulaType":"domino"},"onSave":{"formula":"","formulaType":"domino"},"readAccessFields":[],"readAccessFormula":{"formula":"@True","formulaType":"domino"},"required":[],"validationRules":[],"writeAccessFields":[],"writeAccessFormula":{"formula":"@True","formulaType":"domino"}},{"computeWithForm":false,"deleteAccessFormula":{"formula":"@False","formulaType":"domino"},"fields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"email","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"name","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"newField","summaryField":true,"type":"array","uniqueitems":false}],"modeName":"odata","onLoad":{"formula":"","formulaType":"domino"},"onSave":{"formula":"","formulaType":"domino"},"readAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"email","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"name","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"newField","summaryField":true,"type":"array","uniqueitems":false}],"readAccessFormula":{"formula":"@True","formulaType":"domino"},"required":[],"validationRules":[],"writeAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"email","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"name","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"newField","summaryField":true,"type":"array","uniqueitems":false}],"writeAccessFormula":{"formula":"@True","formulaType":"domino"}}]}},"schema":{"items":{"$ref":"#/components/schemas/KeepFormMode"},"type":"array"}}},"description":"Modes available and details. **Response format TBA**"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Returns the modes available and fields that can be edited","tags":["data"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Universal Id of the document to be acted upon","examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"in":"path","name":"unid","required":true,"schema":{"type":"string"}}],"summary":"Provides information of all enabled modes for the relevant document"},"/info":{"description":"Will return Domino and Domino REST API Version\nFor more complete information use the management endpoints typically port 8889","get":{"description":"JSON element with basic version information","operationId":"getInfo","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/KeepInfo"}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Get information about Domino and Domino REST API Version","tags":["admin"],"x-keep-scope":"ANY","x-keep-version":1},"summary":"Provides basic information about the Domino REST API and Domino runtime"},"/lists":{"description":"Provides the lists (views/folders) present in a database","get":{"description":"Uses db.getViews() and filters out excluded views","operationId":"fetchViews","parameters":[{"description":"Allows to specify views, folders, all\nTODO: categorized / calendar distinction?","in":"query","name":"type","schema":{"enum":["all","folders","views"],"type":"string"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"When set to true, column information gets returned. Use with caution, slows down the API","in":"query","name":"columns","schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"examples":{"lists":{"value":[{"alias":[],"isFolder":false,"title":"($All)","unid":"0E35D520A1EBBB5B48258435003E8284"},{"alias":[],"isFolder":false,"title":"Customers","unid":"86C72C1BF64B6DF04825847100373215"}]},"lists with columns":{"value":[{"alias":[],"columns":[{"name":"$0","position":0,"sorted":false,"title":"#"},{"name":"Form","position":1,"sorted":false,"title":"Form"}],"isFolder":false,"title":"($All)","unid":"0E35D520A1EBBB5B48258435003E8284"},{"alias":[],"columns":[{"name":"Color","position":1,"sorted":false,"title":"Color"},{"name":"Name","position":0,"sorted":false,"title":"Name"}],"isFolder":false,"title":"Customers","unid":"86C72C1BF64B6DF04825847100373215"}]}},"schema":{"items":{"$ref":"#/components/schemas/ListDesignItem"},"type":"array"}}},"description":"Shows list of views and folders in the database"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Provide information on available views/folders","tags":["data"],"x-keep-version":1},"parameters":[{"description":"Allows to specify views, folders, all\nTODO: categorized / calendar distinction?","in":"query","name":"type","schema":{"enum":["all","folders","views"],"type":"string"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"summary":"Provides the lists (views/folders) present in a database"},"/lists/{name}":{"description":"Those are list entries, not the underlying documents","get":{"description":"Pulls in view data","operationId":"fetchViewEntries","parameters":[{"description":"Document mode to retrieve the documents with. (Every Form can have multiple modes, each can be different from other modes). Also, Current logged-in user must have access for the specified mode.","in":"query","name":"mode","schema":{"type":"string"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"When set to false, all metadata Json items on the top level of an object get suppressed.\nDefault is true","in":"query","name":"meta","schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"examples":{"sample":{"value":[{"$0":"null","$10":"Aaron Aaron","@index":"1","@noteid":82542,"@unid":"B66880940B8DDC12802585180049E945","City":"Kansas City","Created":"2020-02-24T13:27:18.450Z","EMail":"aaaron@renovations.com","FirstName":"Aaron","Id":"CN=Aaron Aaron/O=Renovations","LastName":"Aaron","State":"KS"}]}},"schema":{"items":{},"type":"array"}}},"description":"Data coming back, including unids. Metadata is listed first, with JSON property names prefixed with \"@\". All entry fields follow, output in alphabetical order."},"404":{"content":{"application/json":{"examples":{"NotFound":{"value":{"message":"The list {name} is not configured for this database","status":404}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"Specified view name is not found"}},"security":[{"jwt":[]}],"summary":"Pulls in view data","tags":["data"],"x-keep-version":1},"parameters":[{"description":"A character combination to perform a partial match to identify a starting point. The character combination will be applied to the \"column\" and \"direction\" passed in the query string. This cannot be combined with the \"keys\" parameter, i.e. you cannot filter on keys and startwith within that key.","in":"query","name":"startsWith","schema":{"type":"string"}},{"description":"Additional metadata that is not included in the View.  This may have a slight \nperformance cost so use only if necessary.","in":"query","name":"metaAdditional","schema":{"type":"boolean"}},{"description":"Category to restrict view queries to","in":"query","name":"category","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Column for alternative sorting. This requires the list to be designed for indexing on this column","in":"query","name":"column","schema":{"type":"string"}},{"description":"Determines whether, when documents=true, only distinct documents should be retrieved if they exist multiple times in the list.","in":"query","name":"distinctDocuments","schema":{"type":"boolean"}},{"description":"Full-text search query to filter the contents of the list","in":"query","name":"ftSearchQuery","schema":{"type":"string"}},{"description":"How many entries shall be returned, default = Integer.MaxInteger","in":"query","name":"count","schema":{"type":"integer"}},{"description":"Name of the view or folder","in":"path","name":"name","required":true,"schema":{"type":"string"}},{"description":"Retrieve only unread entries. Cannot be combined with documents=true, documentsOnly=true, or methods to select or query documents","in":"query","name":"unreadOnly","schema":{"type":"boolean"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Select by partial Key.  Default is false (key match is exact)","in":"query","name":"keyAllowPartial","schema":{"type":"boolean"}},{"description":"Shall the query return documents instead of view entries","in":"query","name":"documents","schema":{"type":"boolean"}},{"description":"The direction for alternative sorting. This is ignored unless \"column\" query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set.","in":"query","name":"direction","schema":{"enum":["asc","desc"],"type":"string"}},{"description":"The format RichText fields will be returned when retrieving documents instead of view entries.  The default if unspecified is mime.","in":"query","name":"richTextAs","schema":{"$ref":"#/components/schemas/RichTextRepresentation"}},{"description":"Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL.  The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","examples":{"NoKey - 0 key":{"value":""},"State - 1 key":{"value":["MI"]},"State and City - 2 keys":{"value":["Ann Arbor","MI"]}},"in":"query","name":"key","schema":{"items":{"type":"string"},"type":"array"}},{"description":"What shall the view return:\n- document entries\n- category names\n- all","in":"query","name":"scope","required":false,"schema":{"enum":["all","categories","documents"],"type":"string"}},{"description":"When retrieving documents instead of view entries, mark them as read by the current user after retrieval","in":"query","name":"markRead","schema":{"type":"boolean"}},{"description":"When retrieving documents instead of view entries, mark them as unread by the current user after retrieval","in":"query","name":"markUnread","schema":{"type":"boolean"}},{"description":"When set to false, all Json items on the top level of an object get suppressed.\nDefault is true","in":"query","name":"meta","schema":{"type":"boolean"}},{"description":"at which entry should return values start (zero based), default = 0","in":"query","name":"start","schema":{"type":"integer"}}],"summary":"Those are list entries, not the underlying documents"},"/listspivot/{name}":{"description":"Operates on list entries only, not the underlying documents","get":{"description":"Computes min, max, count, total of retrieved view entries","operationId":"pivotViewEntries","parameters":[{"description":"Document mode to retrieve the documents with. Current user must qualify for those","in":"query","name":"mode","schema":{"type":"string"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"listspivotExample":{"value":{"Basic Industries":{"Assets":{"count":100,"max":"988208.57","min":"1069916.51","sum":5.261524021599999E8},"Country":{"count":100,"max":"Yemen","min":"Afghanistan"},"FullName":{"count":100,"max":"Zane Gioan","min":"Alexis Judd"},"Newsletter":{"count":100,"max":"Yearly","min":"Daily"},"email":{"count":100,"max":"wscamerdine1@weather.com","min":""},"gender":{"count":100,"max":"Male","min":"Female"}},"Capital Goods":{"Assets":{"count":142,"max":"9968502.31","min":"1158322.88","sum":6.702025365799999E8},"Country":{"count":142,"max":"Vietnam","min":"Andorra"},"FullName":{"count":142,"max":"Yuri Probets","min":"Adham Farmiloe"},"Newsletter":{"count":142,"max":"Yearly","min":"Daily"},"email":{"count":142,"max":"yprobets72@nationalgeographic.com","min":""},"gender":{"count":142,"max":"Male","min":"Female"}},"Energy":{"Assets":{"count":112,"max":"9836423.95","min":"1075211.73","sum":5.6201872244E8},"Country":{"count":112,"max":"Venezuela","min":"Afghanistan"},"FullName":{"count":112,"max":"Zsa zsa Culvey","min":"Adriena Jones"},"Newsletter":{"count":112,"max":"Yearly","min":"Daily"},"email":{"count":112,"max":"zzsams@macromedia.com","min":""},"gender":{"count":112,"max":"Male","min":"Female"}},"Transportation":{"Assets":{"count":33,"max":"9995833.06","min":"1085519.82","sum":1.7402618585999995E8},"Country":{"count":33,"max":"Yemen","min":"Armenia"},"FullName":{"count":33,"max":"Tam Touzey","min":"Alejandrina Milne"},"Newsletter":{"count":33,"max":"Yearly","min":"Daily"},"email":{"count":33,"max":"ttouzeykd@booking.com","min":"alardiner9h@google.de"},"gender":{"count":33,"max":"Male","min":"Female"}},"n/a":{"Assets":{"count":536,"max":"9952273.9","min":"100328.2","sum":2.7953133287000003E9},"Country":{"count":536,"max":"Zimbabwe","min":"Afghanistan"},"FullName":{"count":536,"max":"Zorah Emberson","min":"Abbot Molineux"},"Newsletter":{"count":536,"max":"Yearly","min":"Daily"},"email":{"count":536,"max":"zromayneko@delicious.com","min":""},"gender":{"count":536,"max":"Male","min":"Female"}}}}},"schema":{"type":"object"}}},"description":"Data coming back, including unids. Metadata is listed first, with JSON property names prefixed with \"@\". All entry fields follow, output in alphabetical order."},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Processes view data as pivot","tags":["data"],"x-keep-version":1},"parameters":[{"description":"A character combination to perform a partial match to identify a starting point. The character combination will be applied to the \"column\" and \"direction\" passed in the query string. This cannot be combined with the \"keys\" parameter, i.e. you cannot filter on keys and startwith within that key.","in":"query","name":"startsWith","schema":{"type":"string"}},{"description":"Column for alternative sorting. This requires the list to be designed for indexing on this column","in":"query","name":"column","schema":{"type":"string"}},{"description":"How many entries shall be returned, default = Integer.MaxInteger","in":"query","name":"count","schema":{"type":"integer"}},{"description":"Name of the column to provide the data for the pivot aggregator","in":"query","name":"pivotColumn","required":true,"schema":{"type":"string"}},{"description":"Name of the view or folder","examples":{"example":{"value":"MarketingInfo"}},"in":"path","name":"name","required":true,"schema":{"type":"string"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"The direction for alternative sorting. This is ignored unless \"column\" query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction. Defaults to ascending if column is set.","in":"query","name":"direction","schema":{"enum":["asc","desc"],"type":"string"}},{"description":"Useful for categorized or sorted lists. Limits return values to entries matching the key or keys. Use multiple key parameter items to specify multiple keys in request URL.  The keys specified must be in the same order as the sorted columns from left to right. Unsorted columns will be ignored.","examples":{"NoKey - 0 key":{"value":""},"State - 1 key":{"value":["MI"]},"State and City - 2 keys":{"value":["Ann Arbor","MI"]}},"in":"query","name":"key","schema":{"items":{"type":"string"},"type":"array"}},{"description":"What shall the view return:\n- document entries\n- category names\n- all","in":"query","name":"scope","required":false,"schema":{"enum":["all","categories","documents"],"type":"string"}},{"description":"at which entry should return values start (zero based), default = 0","in":"query","name":"start","schema":{"type":"integer"}}],"summary":"Performs Pivot table operation on list entries"},"/odata":{"description":"Get a list of ODATA enabled databases","get":{"description":"Return all Domino Rest API databases and scopes that support OData form mode, as well as important OData details such as URL and meta in JSON Object structure.","operationId":"fetchOdataList","responses":{"200":{"content":{"application/json":{"examples":{"odataSample":{"value":{"apitest":{"description":"API Test Schema Based on Demo","icon":"Base64 stuff, preferably SVG","iconname":"travel","meta":"odata/apitest/$metadata","name":"apitest","url":"odata/apitest"},"demoschema":{"description":"demoschema","icon":"Base64 stuff, preferably SVG","iconname":"binoculars","meta":"odata/demoschema/$metadata","name":"demoschema","url":"odata/demoschema"}}}},"schema":{"type":"object"}}},"description":"Successful query"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{}],"summary":"Get scopes that have been enabled or created in OData as a form mode in JSON Object structure","tags":["odata"],"x-keep-scope":"ANY","x-keep-version":1},"summary":"Get a list of ODATA enabled databases"},"/odata/{dataSource}":{"description":"JSON Structure describing what a database can do","get":{"description":"Return OData Configured Forms and OData Context from a specific Domino REST API database.\n","operationId":"getOdataServiceInfo","responses":{"200":{"content":{"application/json":{"examples":{"ODataDbSample":{"value":{"@odata.context":"http://localhost:8880/api/v1/odata/testdb/$metadata","value":[{"kind":"EntitySet","name":"Entry","url":"Entry"},{"kind":"EntitySet","name":"NewForm","url":"NewForm"},{"kind":"EntitySet","name":"OdataSampleForm","url":"OdataSampleForm"},{"kind":"EntitySet","name":"SampleEntry","url":"SampleEntry"},{"kind":"EntitySet","name":"TestForm","url":"TestForm"}]}}},"schema":{"$ref":"#/components/schemas/ODataDbResponse"}},"text/plain":{"examples":{"ODataDbSimpleText":{"value":{"@odata.context":"http://localhost:8880/api/v1/odata/testdb/$metadata","value":[{"kind":"EntitySet","name":"Entry","url":"Entry"},{"kind":"EntitySet","name":"NewForm","url":"NewForm"},{"kind":"EntitySet","name":"OdataSampleForm","url":"OdataSampleForm"},{"kind":"EntitySet","name":"SampleEntry","url":"SampleEntry"},{"kind":"EntitySet","name":"TestForm","url":"TestForm"}]}}},"schema":{"type":"string"}}},"description":"Successful query"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"content":{"application/json":{"examples":{"NotFound":{"value":{"errorId":1112,"message":"A scope definition with that name cannot be found: demo","status":404}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"No such database"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"basic":[]},{"jwt":[]}],"summary":"Get OData Configured Forms in a specific Domino REST API database","tags":["odata"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"Demo":{"value":"demo"}},"in":"path","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"What do we support","examples":{"Current":{"value":"4.0"}},"in":"header","name":"OData-MaxVersion","schema":{"type":"string"}},{"description":"What version is requested","examples":{"Current":{"value":"4.0"}},"in":"header","name":"OData-Version","schema":{"type":"string"}},{"description":"What's the dataservice","examples":{"Current":{"value":"3.0"}},"in":"header","name":"MaxDataServiceVersion","schema":{"type":"string"}}],"summary":"Retrieve ODATA service Document"},"/odata/{dataSource}/$metadata":{"description":"XML Metadata describing forms and views","get":{"description":"Get OData metadata, which returns in XML format.","operationId":"getOdataMetadata","responses":{"200":{"content":{"application/xml":{"examples":{"ODataDbMetadataSample":{"value":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<edmx:Edmx xmlns=\"http://docs.oasis-open.org/odata/ns/edm\"\r\n            xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\"\r\n            Version=\"4.0\">\r\n    <edmx:DataServices>\r\n        <Schema Namespace=\"testdb\">\r\n            <EntityType HasStream=\"true\" Name=\"SampleForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Shape\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Taste\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"Entry\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"TestForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"first_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"last_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"gender\" Type=\"Edm.String\"/>\r\n                <Property Name=\"ip_address\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Pet\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityContainer Name=\"DefaultContainer\">\r\n                <EntitySet EntityType=\"testdb.SampleForm\" Name=\"SampleForm\">\r\n                    <Annotation String=\"SampleForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.Entry\" Name=\"Entry\">\r\n                    <Annotation String=\"Entry\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.TestForm\" Name=\"TestForm\">\r\n                    <Annotation String=\"TestForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n            </EntityContainer>\r\n        </Schema>\r\n    </edmx:DataServices>\r\n</edmx:Edmx>"}},"schema":{"type":"string"}},"text/xml":{"examples":{"ODataDbMetadataSample":{"value":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<edmx:Edmx xmlns=\"http://docs.oasis-open.org/odata/ns/edm\"\r\n            xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\"\r\n            Version=\"4.0\">\r\n    <edmx:DataServices>\r\n        <Schema Namespace=\"testdb\">\r\n            <EntityType HasStream=\"true\" Name=\"SampleForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Shape\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Taste\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"Entry\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"TestForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"Hex0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"Hex0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"first_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"last_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"gender\" Type=\"Edm.String\"/>\r\n                <Property Name=\"ip_address\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Pet\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityContainer Name=\"DefaultContainer\">\r\n                <EntitySet EntityType=\"testdb.SampleForm\" Name=\"SampleForm\">\r\n                    <Annotation String=\"SampleForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.Entry\" Name=\"Entry\">\r\n                    <Annotation String=\"Entry\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.TestForm\" Name=\"TestForm\">\r\n                    <Annotation String=\"TestForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n            </EntityContainer>\r\n        </Schema>\r\n    </edmx:DataServices>\r\n</edmx:Edmx>"}},"schema":{"type":"string"}}},"description":"Successful query"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"content":{"application/json":{"examples":{"NotFound":{"value":{"errorId":1112,"message":"A scope definition with that name cannot be found: demo","status":404}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"No such database"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"basic":[]},{"jwt":[]}],"summary":"Get OData metadata in XML format.","tags":["odata"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"Demo":{"value":"demo"}},"in":"path","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"What do we support","examples":{"Current":{"value":"4.0"}},"in":"header","name":"OData-MaxVersion","schema":{"type":"string"}},{"description":"What version is requested","examples":{"Current":{"value":"4.0"}},"in":"header","name":"OData-Version","schema":{"type":"string"}},{"description":"What's the dataservice","examples":{"Current":{"value":"3.0"}},"in":"header","name":"MaxDataServiceVersion","schema":{"type":"string"}}],"summary":"Retrieve data in ODATA format"},"/odata/{dataSource}/{name}":{"description":"JSON Structure describing what a database can do","get":{"description":"Return documents in a specific Form in OData format","operationId":"fetchOdata","parameters":[{"description":"Comma separated list of fields to return","in":"query","name":"$select","schema":{"type":"string"}},{"description":"Form or view name to query","in":"path","name":"name","required":true,"schema":{"type":"string"}},{"description":"How many responses shall be provided","in":"query","name":"$top","schema":{"type":"integer"}},{"description":"OData Query to filter results server side","in":"query","name":"$filter","schema":{"type":"string"}},{"description":"Searching for content","in":"query","name":"$search","schema":{"type":"string"}},{"description":"Sort order of result","in":"query","name":"$orderby","schema":{"type":"string"}},{"description":"Start at what number of entries","in":"query","name":"$skip","schema":{"type":"integer"}},{"description":"only count elements","in":"query","name":"$count","schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"examples":{"ODataDbNameResponse":{"value":{"@odata.context":"http://localhost:8880/api/v1/odata/testdb/$metadata#TestForm","value":[{"@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261","@odata.etag":"W/\" 6242a8fb\"","@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261","Color":"Yellow","Form":"TestForm","Hex0040_unid":"40618262F3167AD74825881400245261","Pet":"Kelp gull","email":"patger7k@soup.io","first_name":"Pablo","gender":"Male","ip_address":"245.54.137.150","last_name":"Atger"},{"@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475","@odata.etag":"W/\" 6242aac3\"","@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475","Color":"Yellow","Form":"TestForm","Hex0040_unid":"99A6E13F05C7153F4825881400250475","Pet":"Kelp gull","email":"patger7k@soup.io","first_name":"Pablo","gender":"Male","ip_address":"245.54.137.150","last_name":"Atger"}]}}},"schema":{"$ref":"#/components/schemas/ODataDbNameResponse"}}},"description":"Successful query"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"content":{"application/json":{"examples":{"NotFound":{"value":{"errorId":1112,"message":"A scope definition with that name cannot be found: demo","status":404}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"No such database"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"basic":[]},{"jwt":[]}],"summary":"Get documents for the specific Form in OData format","tags":["odata"],"x-keep-version":1},"parameters":[{"description":"Form or view name","in":"path","name":"name","required":true,"schema":{"type":"string"}},{"description":"Scope name","examples":{"Demo":{"value":"demo"}},"in":"path","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"What do we support","examples":{"Current":{"value":"4.0"}},"in":"header","name":"OData-MaxVersion","schema":{"type":"string"}},{"description":"What version is requested","examples":{"Current":{"value":"4.0"}},"in":"header","name":"OData-Version","schema":{"type":"string"}},{"description":"What's the dataservice","examples":{"Current":{"value":"3.0"}},"in":"header","name":"MaxDataServiceVersion","schema":{"type":"string"}}],"post":{"description":"Creates a document in a form using 'odata' mode (odata mode must be configured in the form) and returns the document with OData metadata.","operationId":"createOdata","parameters":[{"description":"Form or view name to query","in":"path","name":"name","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"CreateDocument":{"value":{"Color":"Pthalo Blue","Pet":"American Howling Retriever","email":"wandrews@canofsleep.com","first_name":"Winslow","gender":"Male","ip_address":"192.168.1.1","last_name":"Andrews"}}},"schema":{"$ref":"#/components/schemas/DocumentSimpleRequestUpdate"}}},"description":"The body of the document is in JSON format. Fields must be created using key/value pairs and their values. As some form modes do not allow editable fields, an empty JSON object should be returned.\n\nYou'll need to use the Key \"Form\" name, and it must be set up in \"odata\" mode.","required":true},"responses":{"201":{"content":{"application/json":{"examples":{"ODataDbNameSample":{"value":{"@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB","@odata.etag":"W/\" 62480c60\"","@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB","Color":"Pthalo Blue","Form":"TestForm","Hex0040_unid":"F2A2C0994C07063E48258818002FCDAB","Pet":"American Howling Retriever","email":"wandrews@canofsleep.com","first_name":"Winslow","gender":"Male","ip_address":"192.168.1.1","last_name":"Andrews"}}},"schema":{"$ref":"#/components/schemas/ODataDocument"}}},"description":"Successful creation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"basic":[]},{"jwt":[]}],"summary":"Create a document in a form using OData format","tags":["odata"],"x-keep-version":1},"summary":"Retrieve ODATA service Document"},"/odata/{dataSource}/{name}/{unid}":{"description":"return ONE element as ODATA","get":{"description":"Returns OData as JSON format and includes defined metadata.","operationId":"getOdataItem","parameters":[{"description":"Comma separated list of fields to return","in":"query","name":"$select","schema":{"type":"string"}},{"description":"UniqueID (primary key) of the item","in":"path","name":"unid","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"ODataDbNameUNIDSimple":{"value":{"@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/C1DB10AD7DCC3CC14825881D000C7AF1","@odata.etag":"W/\" 624ead27\"","@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/C1DB10AD7DCC3CC14825881D000C7AF1","Color":"Orange","Form":"TestForm","Hex0040_unid":"C1DB10AD7DCC3CC14825881D000C7AF1","email":"gsellickqu@ning.com","gender":"Male","ip_address":"155.247.81.139"}}},"schema":{"$ref":"#/components/schemas/ODataDocument"}}},"description":"Successful query"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"content":{"application/json":{"examples":{"NotFound":{"value":{"errorId":1112,"message":"A scope definition with that name cannot be found: demo","status":404}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"No such database"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"basic":[]},{"jwt":[]}],"summary":"Get document in a form using OData format","tags":["odata"],"x-keep-version":1},"parameters":[{"description":"Form name","in":"path","name":"name","required":true,"schema":{"type":"string"}},{"description":"Scope name","examples":{"Demo":{"value":"demo"}},"in":"path","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"UniqueId of document","in":"path","name":"unid","required":true,"schema":{"type":"string"}},{"description":"What do we support","examples":{"Current":{"value":"4.0"}},"in":"header","name":"OData-MaxVersion","schema":{"type":"string"}},{"description":"What version is requested","examples":{"Current":{"value":"4.0"}},"in":"header","name":"OData-Version","schema":{"type":"string"}},{"description":"What's the dataservice","examples":{"Current":{"value":"3.0"}},"in":"header","name":"MaxDataServiceVersion","schema":{"type":"string"}}],"put":{"description":"Updates the document in OData format.","operationId":"updateOdataDocument","parameters":[{"description":"This field records the current revision version of document. It's a 32-character hex-encoded string of date. \r\n\r\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.","examples":{"revisionSimple":{"value":"26372571825596dc0db73d0eacf1eacb"}},"in":"query","name":"revision","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"UpdateOdataDocument":{"value":{"Color":"Pthalo Green","Pet":"Coyote","email":"sandy@canofsleep.com","first_name":"Sandy","gender":"Male","ip_address":"8.8.8.8","last_name":"Peterson"}}},"schema":{"$ref":"#/components/schemas/DocumentSimpleRequestUpdate"}}},"description":"Document body in JSON format. Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed.\n\nThe Key \"Form\" is required, and also it should have configured mode \"odata\" beforehand. ","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"ODataDbNameUNIDResponse":{"value":{"@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/FEA2C8C21A2664AE48258814002CD992","@odata.etag":"W/\" 624d1dde\"","@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/FEA2C8C21A2664AE48258814002CD992","Color":"Pthalo Green","Form":"TestForm","Hex0040_unid":"FEA2C8C21A2664AE48258814002CD992","Pet":"Coyote","email":"sandy@canofsleep.com","first_name":"Sandy","gender":"Male","ip_address":"8.8.8.8","last_name":"Peterson"}}},"schema":{"$ref":"#/components/schemas/ODataDocument"}}},"description":"Successful operation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"basic":[]},{"jwt":[]}],"summary":"Perform an update on the document in OData format","tags":["odata"],"x-keep-version":1},"summary":"Retrieve data in ODATA format"},"/openapi":{"description":"resolves db, form, views into database specific enums","get":{"description":"Get Domino Database-specific OpenAPI spec","operationId":"getOpenAPI","responses":{"200":{"content":{"application/json":{"schema":{"type":"object"}}},"description":"Data gets returned as OpenAPI compliant file.\nNo reference to OpenAPI here to avoid inception\nof a schema inside a schema"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{}],"summary":"Get Domino Database-specific OpenAPI spec","tags":["data"],"x-keep-version":1},"parameters":[{"description":"Produce OpenAPI in VoltMX compatible format","in":"query","name":"voltmx","schema":{"type":"boolean"}},{"description":"Scope name","in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"summary":"Gets a Domino Database-specific OpenAPI.   Reference link: https://spec.openapis.org/oas/v3.0.2","x-keep-scope":"ANY"},"/preview":{"description":"Allows to see what's coming when activation","get":{"operationId":"getPreviewFeatures","responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/PreviewInfo"},"type":"array"}}},"description":"Successful list"}},"security":[{"jwt":[]}],"summary":"Shows preview endpoints","tags":["data"],"x-keep-version":1},"summary":"Lists all endpoints that are marked preview","x-keep-scope":"ANY","x-keep-version":1,"x-preview":true},"/profiledocument":{"description":"Get information for specific profile document","get":{"description":"The profile document is created upon first access using the specified profileName. Upon retrieval of the profile document using the same profileName, it will return the existing profile Document. When 'user' parameter is true, it will retrieve the current logged in user associated with the profile document, defaults to false.","operationId":"getProfileDocument","responses":{"200":{"content":{"application/json":{"examples":{"Document":{"value":{"value":"' \"{ \"@meta\": { \"noteid\": 2426, \"unid\": \"8654BEBA03791DF0002589D00057C28C\", \"created\": \"2023-06-16T15:58:34.36Z\", \"lastmodified\": \"2023-06-16T15:58:34.36Z\", \"lastaccessed\": \"2023-06-16T15:58:34.36Z\", \"lastmodifiedinfile\": \"2023-06-16T15:58:34.37Z\", \"addedtofile\": \"2023-06-16T15:58:34.36Z\", \"noteclass\": [ \"DATA\", \"DOCUMENT\" ], \"unread\": false, \"editable\": true, \"revision\": \"000000010057C28C002589D0\" }, \"$Name\": \"$profile_009customers_cn=Keep User/o=KeepOrg\", \"$UpdatedBy\": [ \"CN=Keep User/O=KeepOrg\" ], \"$NoPurge\": \" \", \"$ConflictAction\": \"2\" }\"\n'"}}},"schema":{"$ref":"#/components/schemas/DominoDocument"}}},"description":"Successful retrieval"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Retrieve a profile document using the appropriate profileName","tags":["data"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"The name of the profile document","examples":{"nameExample":{"value":"tmpprofile"}},"in":"query","name":"profileName","required":true,"schema":{"type":"string"}},{"description":"whether use current user as user name key to get the profile document","examples":{"example":{"value":"true"}},"in":"query","name":"user","required":false,"schema":{"type":"boolean"}}],"summary":"Get information for specific profile document"},"/query":{"description":"Runs a DQL query against the documents in the database.","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"The format of RichText.  HTML is default","examples":{"RichTextAsMime":{"value":"mime"}},"in":"query","name":"richTextAs","schema":{"$ref":"#/components/schemas/RichTextRepresentation"}}],"post":{"description":"Send a DQL query and get JSON documents back","operationId":"query","parameters":[{"description":"How many entries shall be returned, default = Integer.MaxInteger","in":"query","name":"count","schema":{"type":"integer"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"What shall be executed:parse the query, explain or execute","in":"query","name":"action","required":true,"schema":{"enum":["execute","explain","parse"],"type":"string"}},{"description":"at which entry should return values start (zero based), default = 0","in":"query","name":"start","schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"examples":{"QueryDQL":{"value":{"maxScanDocs":500000,"maxScanEntries":200000,"mode":"dql","noViews":false,"query":"form = 'Customer' and Color = ?Color","timeoutSecs":300,"variables":{"Color":"Maroon","Pet":"Giraffe"},"viewRefresh":true}}},"schema":{"$ref":"#/components/schemas/QueryRequest"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"items":{},"type":"array"}}},"description":"Succesful query showing results"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Send a DQL query and get JSON documents back","tags":["data"],"x-keep-version":1},"summary":"Runs a DQL query against the documents in the database."},"/raw":{"description":"Create a document in the database for a specified form.  And it returns a NotesDocument object that represents the document.\nNo schema to normalize or filter the document is applied. Json is written as-is into the Note.\n\nTo be able to use this endpoint a form mode \"raw\" must exist for the value of \"form\" in JSON\nand the current user needs the permission (set by formula in the \"raw\" mode) to use the mode","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"post":{"description":"Create a new document for a specified form.","operationId":"createDocumentRaw","parameters":[{"description":"Name of the form to create a document for","examples":{"Customer":{"value":"\"Customer\""}},"in":"query","name":"form","required":true,"schema":{"type":"string"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"UNID of an existing document, to make this a response document","in":"query","name":"parentUnid","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"createDocument":{"value":{"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite"}}},"schema":{"type":"object"}}},"description":"Document body in JSON format. Key/value pairs of fields and their values to update, 'Form' is required.\n","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"document":{"value":{"@meta":{"addedtofile":"2022-10-13T13:41:30.68+08:00","created":"2022-10-13T13:41:30.64+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","noteclass":["DATA","DOCUMENT"],"noteid":44026,"revision":"00000001001F442C482588DA","size":570,"unid":"1C62D55D75387684482588DA001F4428","unread":true},"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite"}}},"schema":{"$ref":"#/components/schemas/DominoDocument"}}},"description":"Successful creation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Create a new document for a specified form without data conversion","tags":["data"],"x-keep-version":1,"x-preview":true},"summary":"Create a document in the database for a specified form.  And it returns a NotesDocument object that represents the document."},"/raw/{unid}":{"description":"No schema to normalize or filter the document is applied. Json is read/written as-is from/into the Note.\n\nTo be able to use this endpoint a form mode \"raw\" must exist for the value of \"form\" in JSON (write)\nor the value of the \"form\" item in the document (read) \nand the current user needs the permission (set by formula in the \"raw\" mode) to use the mode","get":{"description":"All items are returned, no item name normalization or translation is applied\nNo schema to normalize or filter the document is applied. Json is returned as-is from the Note.\n\nTo be able to use this endpoint a form mode \"raw\" must exist for the value of \"form\" item in the document\nand the current user needs the permission (set by formula in the \"raw\" mode) to use the mode\n\nUse on your own risk!","operationId":"getDocumentRaw","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Should a document be computed with its form's \"Default Value\", \"Input Translation\" and \"Input Validation\" formulas before retrieval","examples":{"compute":{"value":"true"}},"in":"query","name":"computeWithForm","schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"examples":{"document":{"value":{"@meta":{"addedtofile":"2022-10-13T13:41:30.68+08:00","created":"2022-10-13T13:41:30.64+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","noteclass":["DATA","DOCUMENT"],"noteid":44026,"revision":"00000001001F442C482588DA","size":570,"unid":"1C62D55D75387684482588DA001F4428","unread":true},"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite"}}},"schema":{"$ref":"#/components/schemas/DominoDocument"}}},"description":"Successful retrieval"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Retrieve a given document with all items","tags":["data"],"x-keep-version":1,"x-preview":true},"parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Universal Id of the document to be acted upon","examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"in":"path","name":"unid","required":true,"schema":{"type":"string"}}],"put":{"description":"All items are updated, no item name normalization or translation is applied\nNo schema to normalize or filter the document is applied. Json is written as-is into the Note.\n\nTo be able to use this endpoint a form mode \"raw\" must exist for the value of \"form\" item in the document\nand the current user needs the permission (set by formula in the \"raw\" mode) to use the mode\n\nUse on your own risk!","operationId":"updateDocumentRaw","parameters":[{"description":"UNID of an existing document, to make this a response document","in":"query","name":"parentUnid","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"UpdateDocument":{"value":{"Color":"Puce","Form":"TestForm","Pet":"Black-capped chickadee","email":"mbranthwaite0@nba.com","first_name":"Madison","gender":"Female","ip_address":"91.254.204.27","last_name":"Branthwaite"}}},"schema":{"type":"object"}}},"description":"Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. 'Form' is required.","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"SampleUpdateDocument":{"value":{"@meta":{"addedtofile":"2022-10-13T13:41:30.68+08:00","created":"2022-10-13T13:41:30.64+08:00","lastaccessed":"2022-10-13T13:41:30.68+08:00","lastmodified":"2022-10-13T13:41:30.68+08:00","lastmodifiedinfile":"2022-10-13T13:41:30.69+08:00","noteclass":["DATA","DOCUMENT"],"noteid":44026,"revision":"00000001001F442C482588DA","size":570,"unid":"1C62D55D75387684482588DA001F4428","unread":true},"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite"}}},"schema":{"$ref":"#/components/schemas/DominoDocument"}}},"description":"Successful mode operation"},"400":{"$ref":"#/components/responses/400BadRequest"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Perform an update on the document with anything that's in JSON","tags":["data"],"x-keep-version":1,"x-preview":true},"summary":"Acts on a document without a schema conversion applied"},"/richtext/markdown/{unid}":{"description":"Legacy RichText fields (typically Body) returned as Markdown, subject to the limitations of the Flexmark markdown processor","get":{"description":"Return RichText as Base64 encoded Markdown","operationId":"getRichTextMarkdown","parameters":[{"description":"Name of the RichText item to retrieve. When omitted \"Body\" is used as item name","in":"query","name":"item","schema":{"type":"string"}}],"responses":{"200":{"content":{"text/markdown":{"schema":{"type":"string"}}},"description":"Returns Markdown data converted from RichText"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Return RichText as Base64 encoded Markdown","tags":["data"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Universal Id of the document to be acted upon","examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"in":"path","name":"unid","required":true,"schema":{"type":"string"}},{"description":"mode to perform the document access in. Defaults to 'default' if missing. All lowercase, no spaces, letters and numbers only","examples":{"ForApprover":{"value":"approver"},"defaultValue":{"value":"default"}},"in":"query","name":"mode","schema":{"type":"string"}}],"summary":"Provides Read access to a RichText field as MIME"},"/richtext/mime/{unid}":{"description":"Legacy RichText fields (typically Body) returned as MIME including embedded images and links to attachmentd","get":{"description":"Return RichText as Base64 encoded MIME","operationId":"getRichTextMime","parameters":[{"description":"Name of the RichText item to retrieve. When omitted \"Body\" is used as item name","in":"query","name":"item","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/mime":{"examples":{"mimeExample":{"value":"'\r\nMIME-Version: 1.0\r\nContent-Type: multipart/related; boundary=0-ab12cd74-b592-4523-990d-f35a312e48c2\r\n\r\n--0-ab12cd74-b592-4523-990d-f35a312e48c2\r\nContent-type: text/html; charset=UTF-8\r\nContent-Disposition: inline\r\n<html>\r\n <head></head>\r\n <body>\r\n  <span style=\"font-family: sans-serif ; font-size: 10pt ; \">name</span><span style=\"font-family: sans-serif ; font-size: 10pt ; \">: </span><span style=\"font-family: sans-serif ; font-size: 10pt ; \">John Doe</span><br> <span style=\"font-family: sans-serif ; font-size: 10pt ; \">lastmodifieddate</span><span style=\"font-family: sans-serif ; font-size: 10pt ; \">: </span><span style=\"font-family: sans-serif ; font-size: 10pt ; \">2019-07-18T15:47:53.000+0000</span><br> <span style=\"font-family: sans-serif ; font-size: 10pt ; \">id</span><span style=\"font-family: sans-serif ; font-size: 10pt ; \">: </span><span style=\"font-family: sans-serif ; font-size: 10pt ; \">0037F00001WZH78QAH</span><br> <span style=\"font-family: sans-serif ; font-size: 10pt ; \">form</span><span style=\"font-family: sans-serif ; font-size: 10pt ; \">: </span><span style=\"font-family: sans-serif ; font-size: 10pt ; \">fromSalesforce</span><br> <span style=\"font-family: sans-serif ; font-size: 10pt ; \">$UpdatedBy</span><span style=\"font-family: sans-serif ; font-size: 10pt ; \">: </span><span style=\"font-family: sans-serif ; font-size: 10pt ; \">Anonymous</span>\r\n </body>\r\n</html>\r\n--0-ab12cd74-b592-4523-990d-f35a312e48c2--\r\n'"}},"schema":{"type":"string"}}},"description":"Returns RichText as Base64 encoded MIME. The example shows the decoded MIME."},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Return RichText as Base64 encoded MIME","tags":["data"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Universal Id of the document to be acted upon","examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"in":"path","name":"unid","required":true,"schema":{"type":"string"}},{"description":"mode to perform the document access in. Defaults to 'default' if missing. All lowercase, no spaces, letters and numbers only","examples":{"ForApprover":{"value":"approver"},"defaultValue":{"value":"default"}},"in":"query","name":"mode","schema":{"type":"string"}}],"summary":"Provides Read access to a RichText field as MIME"},"/richtext/plain/{unid}":{"description":"Return a stream of plain unformatted text from a Rich Text field.","get":{"description":"Return a stream of plain unformatted text from a Rich Text field.","operationId":"getRichTextPlain","parameters":[{"description":"Name of the RichText item to retrieve. When omitted \"Body\" is used as item name","in":"query","name":"item","schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"schema":{"type":"string"}}},"description":"Return a stream of plain unformatted text from a Rich Text field."},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Return a stream of plain unformatted text from a Rich Text field.","tags":["data"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"customcontacts"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"Universal Id of the document to be acted upon","examples":{"sample":{"value":"94CA3B3B5E035D6048258471003639C6"}},"in":"path","name":"unid","required":true,"schema":{"type":"string"}},{"description":"mode to perform the document access in. Defaults to 'default' if missing. All lowercase, no spaces, letters and numbers only","examples":{"ForApprover":{"value":"approver"},"defaultValue":{"value":"default"}},"in":"query","name":"mode","schema":{"type":"string"}}],"summary":"Return a stream of plain unformatted text from a Rich Text field."},"/run/agent":{"description":"Runs an existing agent in a given database","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"post":{"description":"Runs an existing agent, serverside. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser\r\n\r\nFormula type agent's target is anything other than \"None\" is unsupported trigger.\r\n\r\nUnsupported trigger will get \"Unsupported trigger and search in the background or embedded agent\"","operationId":"executeAgent","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"sample":{"value":{"agentName":"processJson"}}},"schema":{"$ref":"#/components/schemas/AgentPayload","properties":{"agentName":{"type":"string"}},"required":["agentName"]}}},"description":"Request body for run an agent. agentName is required. ","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"synchronous":{"value":{"agentResponse":"done"}}},"schema":{"type":"object"}}},"description":"Successful execution of agent"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Runs an agent in a database, in real time","tags":["code"],"x-keep-version":1},"summary":"Runs an existing agent in a given database"},"/run/agentAsync":{"description":"Runs an existing agent in a given database","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"post":{"description":"Queues an existing agent to run asynchronously, serverside. Existing limits of agent execution duration apply, but the HTTP response will be delivered immediately. The response will include a UUID for the request, which can be used to check progress or cancel the agent.\n\nContent in the payload will be passed to the scheduler to identify run criteria.","operationId":"executeAgentAsync","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"sample":{"value":{"agentName":"processJson","callbackUrl":"https://www.acme.com/api/callback","method":"POST","payload":{"FirstName":"Adrian","TestBoolean":false,"TestVal":"20"},"runAsServer":false}}},"schema":{"$ref":"#/components/schemas/AgentPayloadAsync"}}},"description":"Request body for run an agent asynchronously. agentName is required.  ","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"async":{"value":{"message":"processing","status":200,"statusText":"OK","uuid":"f19a5167-3722-4abe-91ee-d27bab052df7"}}},"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Successful execution of agent"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Runs an agent in a database asynchronously","tags":["code"],"x-keep-version":5},"summary":"Runs an existing agent in a given database"},"/run/agentAsync/{uuid}":{"delete":{"description":"Aborts an async agent","operationId":"cancelAgent","parameters":[{"description":"uuid of the asynchronous agent to check status of","examples":{"sample":{"value":"\"251f1538-5c1d-4b64-b4a5-ae56dade65b6\""}},"in":"path","name":"uuid","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"success":{"value":{"message":"success","status":200,"statusText":"OK","unid":"cea3a254-11f2-4f9b-8385-5bb815b81cdb"}}},"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Success"},"400":{"description":"UUID not found"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Aborts an async agent","tags":["code"],"x-keep-version":5},"description":"Gets status or cancels async agent","get":{"description":"Get current status of an agent running asynchronously","operationId":"getAgentInfo","parameters":[{"description":"uuid of the asynchronous agent to check status of","examples":{"sample":{"value":"\"251f1538-5c1d-4b64-b4a5-ae56dade65b6\""}},"in":"path","name":"uuid","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"sample":{"value":{"status":"running","uuid":"251f1538-5c1d-4b64-b4a5-ae56dade65b6"}},"sampleDone":{"value":{"status":"done","uuid":"f19a5167-3722-4abe-91ee-d27bab052df7"}}},"schema":{"$ref":"#/components/schemas/AgentAsyncMessage"}}},"description":"Success"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"404":{"$ref":"#/components/responses/404NotFound"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Get current status for an async agent","tags":["code"],"x-keep-version":5},"parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"uuid of the asynchronous agent","in":"path","name":"uuid","required":true,"schema":{"type":"string"}}],"summary":"Gets status or cancels async agent"},"/run/agentWithContext":{"description":"Pay attention to the agent's target. ","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"post":{"description":"Runs an existing agent, serverside, passing an UNID of a document to act upon. NotesSession.documentContext can be used in the agent to access the relevant document. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser.","operationId":"executeAgentWithContext","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"sample":{"value":{"agentName":"processJson","returnMode":"default","unid":"36EBDFD11D4381F280258600003ED607"}},"sampleWithOutMode":{"value":{"agentName":"processJson","unid":"36EBDFD11D4381F280258600003ED607"}}},"schema":{"$ref":"#/components/schemas/AgentWithContextMessage","properties":{"agentName":{"type":"string"},"returnMode":{"type":"string"},"unid":{"type":"string"}},"required":["agentName"]}}},"description":"Name of agent","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"With form mode":{"value":{"@created":"2021-07-06T08:10:04Z","@etag":"W/\" 60e40fdc\"","@lastaccessed":"2021-07-06T08:10:04Z","@lastmodified":"2021-07-06T08:10:04Z","@noteid":0,"@size":104,"@unid":"CAE3F1BD3EB1033A0025870A002CDE3A","@unread":false,"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Branthwaite"}},"Without form mode":{"value":{"agentResponse":"done"}}},"schema":{"type":"object"}}},"description":"Successful execution of agent"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Runs an agent in a database, in real time, passing a document for context","tags":["code"],"x-keep-version":5},"summary":"Runs an existing agent in a given database using a specific document as the agent's run context"},"/run/code":{"description":"Execution request to server","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"post":{"description":"Sends JavaScript to a server to be executed in the Domino context","operationId":"execute","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"simpleagent":{"value":{"context":{"collection":["94CA3B3B5E035D6048258471003639C6","A7E1365AE618717F48258471003639E8","E0FAAD06C9EBC8EB48258471003639EF"],"document":"6C3F31222CA24AD448258471003639B3","query":"Some DQL here","view":"Customers"},"payload":"var treeSet = Java.type('java.util.TreeSet');\nvar javaJson = Java.type('io.vertx.core.json.JsonObject');\nvar result = new treeSet();\n\nfor each (var doc in keep.view.getAllDocuments()) {\n\tvar curCol = doc.get(\"Color\");\n\tif (curCol) {\n\t\tresult.add(curCol);\n\t}\n}\n\nfor each (var color in result) {\n\tkeep.results.add(color);\n}\n\nkeep.results.add(keep.document.generateXML());\n\nfor each (var unid in keep.collection) {\n\tvar rawJson = keep.database.getDocumentByUNID(unid).toJson(true);\n\tvar actualJson = new javaJson(rawJson);\n\tkeep.results.add(actualJson);\n}"}}},"schema":{"$ref":"#/components/schemas/ExecutionRequest"}}},"description":"Execution request","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExecutionResult"}}},"description":"Successful execution"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Send execution request to server","tags":["code"],"x-keep-version":5},"summary":"Execution request to server"},"/run/codegroovy":{"description":"Send groovy execution request to server","parameters":[{"description":"Comma separated list of document ids, optional if DQL or view provided","examples":{"UNIDs":{"value":"94CA3B3B5E035D6048258471003639C6,A7E1365AE618717F48258471003639E8,E0FAAD06C9EBC8EB48258471003639EF"}},"in":"query","name":"collection","schema":{"type":"string"}},{"description":"Document unique ID, optional if DQL or view provided","in":"query","name":"document","schema":{"type":"string"}},{"description":"Name of a view to run agains, URLEncodedoptional if document or DQL provided","in":"query","name":"view","schema":{"type":"string"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"URLEncoded DQL Query, optional if document or view provided. Used to refine which data the JavaScript should run against.","examples":{"State":{"value":"State%20%3D%20%27CA%27"}},"in":"query","name":"query","schema":{"type":"string"}}],"post":{"description":"Sends JavaScript to a server to be executed in the Domino context","operationId":"executeGroovy","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/javascript":{"examples":{"simpleGroovyRequest":{"value":"def result = [  \r\n   count: keep.view.getDocumentCount()\r\n];\r\ndef docs = new ArrayList();\r\ndef callback = { \r\n    doc, loop -> \r\n        docs.add([\r\n            color: doc.getItemValue(\"name\"),\r\n            first_name: doc.getItemValue(\"email\")\r\n        ])\r\n    result['docs'] = docs\r\n};\r\nkeep.view.forEachDocument(0, 2, callback)\r\nkeep.results.add(result)"}},"schema":{"type":"string"}}},"description":"Execution request","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"simpleGroovyResponse":{"value":{"errors":[],"results":[{"count":6,"docs":[{"color":["Paxon"],"first_name":["pmadre9y@rambler.ru"]},{"color":["Paxon"],"first_name":["pmadre9y@rambler.ru"]}]}]}}},"schema":{"$ref":"#/components/schemas/ExecutionResult"}}},"description":"Successful execution"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Send execution request to server","tags":["code"],"x-keep-version":5},"summary":"Send groovy execution request to server"},"/run/codejs":{"description":"Send javascript execution request to server","parameters":[{"description":"Comma separated list of document ids, optional if DQL or view provided","examples":{"UNIDs":{"value":"94CA3B3B5E035D6048258471003639C6,A7E1365AE618717F48258471003639E8,E0FAAD06C9EBC8EB48258471003639EF"}},"in":"query","name":"collection","schema":{"type":"string"}},{"description":"Document unique ID, optional if DQL or view provided","in":"query","name":"document","schema":{"type":"string"}},{"description":"Name of a view to run agains, URLEncodedoptional if document or DQL provided","in":"query","name":"view","schema":{"type":"string"}},{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"URLEncoded DQL Query, optional if document or view provided. Used to refine which data the JavaScript should run against.","examples":{"State":{"value":"State%20%3D%20%27CA%27"}},"in":"query","name":"query","schema":{"type":"string"}}],"post":{"description":"Sends JavaScript to a server to be executed in the Domino context","operationId":"executeJavaScript","parameters":[{"description":"Scope name","examples":{"CustomApp":{"value":"demo"},"Directory":{"value":"dominodirectory"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"text/plain":{"examples":{"simpleDocumentRequest":{"value":"keep.document.replaceItemValue(\"email\", \"demo@hcl.com\");\r\nkeep.document.save();"},"simpleViewRequest":{"value":"var result = {};\r\nresult[\"count\"] = keep.view.getDocumentCount();\r\nvar counter = 0;\r\nprint(\"COUNT = \" + keep.view.getDocumentCount());\r\nvar docs = [];\r\nkeep.view.forEachDocument(0, 2, function(doc, loop) {\r\n    print(\"loop: \" + doc.getItemValue(\"name\"));\r\n    counter++;\r\n    docs.push({\r\n        name: doc.getItemValue(\"name\"),\r\n        email: doc.getItemValue(\"email\")\r\n    })\r\n    result.docs = docs\r\n})\r\nkeep.results.add(result)\r\nprint(\"RESULT VIEW SIZE=\" + keep.results.size());\r\nprint(\"COUNTER=\" + counter);"}},"schema":{"type":"string"}}},"description":"Execution request","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"simpleDocumentResponse":{"value":{"errors":[],"results":["Code completed without output"]}},"simpleErrorResponse":{"value":{"errors":["TypeError: keep.database.getDocumentByUNID(unid).toJson is not a function in <eval> at line number 4"],"results":["Code completed without output"]}},"simpleViewResponse":{"value":{"errors":[],"results":[{"count":6,"docs":{"0":{"email":["pmadre9y@rambler.ru"],"name":["Paxon"]},"1":{"email":["pmadre9y@rambler.ru"],"name":["Paxon"]}}}]}}},"schema":{"$ref":"#/components/schemas/ExecutionResult"}}},"description":"Successful execution"},"403":{"$ref":"#/components/responses/403Forbidden"},"406":{"$ref":"#/components/responses/406NotAcceptable"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Send execution request to server","tags":["code"],"x-keep-version":5},"summary":"Send javascript execution request to server"},"/run/formula":{"description":"Tests formula for completeness and results","parameters":[{"description":"Scope name","examples":{"default":{"value":"demo"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"post":{"description":"Checks if a formula would execute properly. Mostly used for Domino REST API AdminUI to test formula fields","operationId":"runFormula","requestBody":{"content":{"application/json":{"examples":{"simpleRequestWithQuery":{"value":{"formula":"@IsMember(\"[admin]\";@UserRoles)","query":"form = 'Entry' and name = 'Paxon'","save":false,"type":"domino","unid":"","user":""}},"simpleRequestWithUnid":{"value":{"formula":"@IsMember(\"[admin]\";@UserRoles)","query":"","save":false,"type":"domino","unid":"773342CE75B79B7D4825883100453252","user":""}}},"schema":{"$ref":"#/components/schemas/FormulaRequest"}}},"description":"Formula to be checked","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"simpleResponseWithQuery":{"value":{"result":[{"result":[0],"unid":"8C525AE6BE15DB6148258831001F5B7F"},{"result":[0],"unid":"AA78E397F5397D054825883100453848"}]}},"simpleResponseWithUnid":{"value":{"result":[{"result":[0],"unid":"773342CE75B79B7D4825883100453252"}]}}},"schema":{"$ref":"#/components/schemas/FormulaResult"}}},"description":"Successfull test of formula"},"400":{"$ref":"#/components/responses/400BadRequest"},"401":{"$ref":"#/components/responses/401Unauthorized"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"},"501":{"$ref":"#/components/responses/501NotImplemented"}},"security":[{"jwt":[]}],"summary":"Post a formula  to Domino","tags":["code"],"x-keep-version":1},"summary":"Tests formula for completeness and results"},"/scope":{"description":"Operation on a Domino REST API configuration for a NSF.","get":{"deprecated":false,"description":"Get the configuration for specified scope","operationId":"getScope","responses":{"200":{"content":{"application/json":{"examples":{"database":{"value":{"agents":[],"allowCode":true,"allowDecryption":true,"apiName":"demonofieldgroup","available":true,"description":"Demo database","dqlAccess":true,"dqlFormula":{"formula":"@True","formulaType":"domino"},"forms":[{"alias":[],"formModes":[{"computeWithForm":false,"deleteAccessFormula":{"formula":"@False","formulaType":"domino"},"fields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"integer","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Age","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Name","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Shape","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Taste","summaryField":true,"type":"string","uniqueitems":false}],"modeName":"default","onLoad":{"formula":"","formulaType":"domino"},"onSave":{"formula":"","formulaType":"domino"},"readAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"integer","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Age","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Name","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Shape","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Taste","summaryField":true,"type":"string","uniqueitems":false}],"readAccessFormula":{"formula":"@True","formulaType":"domino"},"required":["Form"],"validationRules":[],"writeAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"integer","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Age","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Name","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Shape","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Taste","summaryField":true,"type":"string","uniqueitems":false}],"writeAccessFormula":{"formula":"@True","formulaType":"domino"}},{"computeWithForm":false,"deleteAccessFormula":{"formula":"@False","formulaType":"domino"},"fields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false}],"modeName":"dql","onLoad":{"formula":"","formulaType":"domino"},"onSave":{"formula":"","formulaType":"domino"},"readAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false}],"readAccessFormula":{"formula":"@True","formulaType":"domino"},"required":["Form"],"validationRules":[],"writeAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false}],"writeAccessFormula":{"formula":"@True","formulaType":"domino"}}],"formName":"SampleForm"}],"formulaEngine":"domino","icon":"Base64 stuff, preferably SVG","iconName":"mountain","isActive":true,"isDBFTIndex":true,"nsfPath":"Demo.nsf","openAccess":true,"requireRevisionToUpdate":false,"schemaName":"demoNofieldGroup","views":[{"alias":["($All)"],"name":"($All)","unid":"0E35D520A1EBBB5B48258435003E8284"},{"alias":["Customers"],"name":"Customers","unid":"86C72C1BF64B6DF04825847100373215"}]}},"databaseWithFieldInfo":{"value":{"agents":[],"allowCode":true,"allowDecryption":true,"apiName":"demofieldgroup","available":true,"description":"Demo database","dqlAccess":true,"dqlFormula":{"formula":"@True","formulaType":"domino"},"forms":[{"alias":[],"formModes":[{"computeWithForm":false,"deleteAccessFormula":{"formula":"@False","formulaType":"domino"},"fields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","fieldGroup":"person","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"integer","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Age","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","fieldGroup":"person","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Name","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Shape","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Taste","summaryField":true,"type":"string","uniqueitems":false}],"modeName":"default","onLoad":{"formula":"","formulaType":"domino"},"onSave":{"formula":"","formulaType":"domino"},"readAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","fieldGroup":"person","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"integer","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Age","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","fieldGroup":"person","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Name","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Shape","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Taste","summaryField":true,"type":"string","uniqueitems":false}],"readAccessFormula":{"formula":"@True","formulaType":"domino"},"required":["Form"],"validationRules":[],"writeAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","fieldGroup":"person","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"integer","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Age","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","fieldGroup":"person","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Name","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Shape","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Taste","summaryField":true,"type":"string","uniqueitems":false}],"writeAccessFormula":{"formula":"@True","formulaType":"domino"}},{"computeWithForm":false,"deleteAccessFormula":{"formula":"@False","formulaType":"domino"},"fields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false}],"modeName":"dql","onLoad":{"formula":"","formulaType":"domino"},"onSave":{"formula":"","formulaType":"domino"},"readAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false}],"readAccessFormula":{"formula":"@True","formulaType":"domino"},"required":["Form"],"validationRules":[],"writeAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false}],"writeAccessFormula":{"formula":"@True","formulaType":"domino"}}],"formName":"SampleForm"}],"formulaEngine":"domino","icon":"Base64 stuff, preferably SVG","iconName":"mountain","isActive":true,"isDBFTIndex":true,"nsfPath":"Demo.nsf","openAccess":true,"requireRevisionToUpdate":false,"schemaName":"demofieldGroup","views":[{"alias":["($All)"],"name":"($All)","unid":"0E35D520A1EBBB5B48258435003E8284"},{"alias":["Customers"],"name":"Customers","unid":"86C72C1BF64B6DF04825847100373215"}]}}},"schema":{"$ref":"#/components/schemas/KeepDatabase"}}},"description":"Successful retrieval"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"content":{"application/json":{"examples":{"NotFound":{"value":{"errorId":1112,"message":"A scope definition with that name cannot be found: testscope","status":404}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"No such scope"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Retrieves configuration for one scope mapped to a database schema","tags":["scope"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"default":{"value":"demo"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"summary":"Retrieve a Domino REST API configuration for scope of a domino database"},"/scope/access":{"description":"Operation on a Domino REST API configuration for a NSF.","get":{"deprecated":false,"description":"Get information on ACCESS levels for current user","operationId":"getScopeAccess","responses":{"200":{"content":{"application/json":{"examples":{"ScopeAccessFound":{"value":{"Flags":["CREATE_FOLDER","CREATE_LOTUSSCRIPT","CREATE_PRAGENT","CREATE_PRFOLDER","PERSON","PUBLICREADER","PUBLICWRITER"],"Level":"MANAGER","Roles":["[SampleRole]"],"User":"CN=Doctor Notes/O=ProjectKeep"}}},"schema":{"$ref":"#/components/schemas/ScopeAccessUserEntry"}}},"description":"Successful retrieval"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"content":{"application/json":{"examples":{"NotFound":{"value":{"errorId":1112,"message":"A scope definition with that name cannot be found: testscope","status":404}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"No such scope"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Provides information on ACCESS levels for current user","tags":["scope"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"default":{"value":"demo"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}}],"summary":"Retrieve ACCESS levels for Domino REST API configuration"},"/scope/form/{form}":{"description":"Operation on a Domino REST API configuration for a NSF.","get":{"deprecated":false,"description":"Get configuration for the form of specified scope.","operationId":"getScopeForm","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/KeepForm"}}},"description":"Successful retrieval"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"content":{"application/json":{"examples":{"NotFound":{"value":{"errorId":1112,"message":"A scope definition with that name cannot be found: testscope","status":404}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"No configured form for this scope "},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Retrieves configuration for one form of a scope mapped to a database schema","tags":["scope"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"default":{"value":"demo"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"name or alias as stored in document","in":"path","name":"form","required":true,"schema":{"type":"string"}}],"summary":"Retrieve a Domino REST API configuration for specified form in database"},"/scope/mode/{form}/{mode}":{"description":"Operation on a Domino REST API configuration for a NSF.","get":{"deprecated":false,"description":"Get configuration for one mode of the form of specified scope.","operationId":"fetchFormModes","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/KeepForm"}}},"description":"Successful retrieval"},"401":{"$ref":"#/components/responses/401Unauthorized"},"404":{"content":{"application/json":{"examples":{"NotFound":{"value":{"errorId":1112,"message":"A scope definition with that name cannot be found: testscope","status":404}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"FormMode is not found for the form in the scope"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Retrieves configuration for one mode of a form of a scope mapped to a database schema","tags":["scope"],"x-keep-version":1},"parameters":[{"description":"Scope name","examples":{"default":{"value":"demo"}},"in":"query","name":"dataSource","required":true,"schema":{"type":"string"}},{"description":"access mode","in":"path","name":"mode","required":true,"schema":{"type":"string"}},{"description":"name or alias as stored in document","in":"path","name":"form","required":true,"schema":{"type":"string"}}],"summary":"Retrieve a Domino REST API configuration for specified form in specified mode of a scope"},"/scopes":{"description":"A list of NSF that have at least one schema linked to a scope name and marked as active - starting point for exploring available data","get":{"description":"Get a list of scopes enabled by the Domino Administrator for Domino REST API access as JSON","operationId":"fetchScopes","parameters":[{"description":"Include active and inactive scopes","in":"query","name":"includeAll","schema":{"type":"boolean"}},{"description":"Skips the icon data","in":"query","name":"skipIcon","schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"examples":{"KeepDatabases":{"value":[{"apiName":"demolist","description":"This is a test demo for some function of API","isActive":true,"nsfPath":"Demo.nsf","schemaName":"demolist"},{"apiName":"demotest","description":"This is a test demo scope","isActive":true,"nsfPath":"Demo.nsf","schemaName":"demotest"},{"apiName":"names","description":"This is scope for names","isActive":false,"nsfPath":"names.nsf","schemaName":"names"}]}},"schema":{"items":{"$ref":"#/components/schemas/KeepDBShort"},"type":"array"}}},"description":"JSON list of scopes enabled for Domino REST API access"},"403":{"$ref":"#/components/responses/403Forbidden"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Retrieve lists of scopes available based on query","tags":["scope"],"x-keep-scope":"ANY","x-keep-version":1},"summary":"URL Endpoint for listing Domino REST API  enabled scopes"},"/userinfo":{"description":"Will return Name and group membership info","get":{"description":"JSON element with OIDC-compatible user information","operationId":"getUserInfo","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInfo"}}},"description":"Runtime info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Get information about the currently-authenticated user","tags":["admin"],"x-keep-scope":"ANY","x-keep-version":1},"post":{"description":"JSON element with OIDC-compatible user information","operationId":"getUserInfoPost","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmptyObject"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInfo"}}},"description":"User info"},"401":{"$ref":"#/components/responses/401Unauthorized"},"500":{"$ref":"#/components/responses/500InternalServerError"}},"security":[{"jwt":[]}],"summary":"Get information about the currently-authenticated user","tags":["admin"],"x-keep-scope":"ANY","x-keep-version":1},"summary":"Provides basic information about the currently logged in user"}},"components":{"responses":{"400BadRequest":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"Invalid request. Shows up when submission is flaky:\n- Wrong authentication\n- Wrong content-type\n- Missing or wrong parameter types"},"401Unauthorized":{"content":{"application/json":{"examples":{"Unauthorized":{"value":{"message":"Invalid credentials or account locked","status":401}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"401 Unauthorized"},"403Forbidden":{"content":{"application/json":{"examples":{"Forbidden":{"value":{"message":"Nice try chap, ask before next time","status":403}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"Forbidden"},"404NotFound":{"content":{"application/json":{"examples":{"NotFound":{"value":{"message":"This is not the data you seek!","status":404}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"Content not found"},"405MethodNotAllowed":{"description":"Method not allowed"},"406NotAcceptable":{"content":{"application/json":{"examples":{"GenericRejection":{"value":{"details":"The haferlup needs left turning shrufti","message":"This is not a supported operation. Try again","status":406}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"Invalid operation - something got requested that isn't supported"},"500InternalServerError":{"content":{"application/json":{"examples":{"GenericError":{"value":{"details":"Dreaded pirate NullPointer","message":"Sorry pal, we screwed up","status":500}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"The server screwed up"},"501NotImplemented":{"content":{"application/json":{"examples":{"NextVersion":{"value":{"details":"We do sprints, not marathons","message":"Not now, maybe tomorrow","status":501}}},"schema":{"$ref":"#/components/schemas/ErrorMessage"}}},"description":"Working on it, just not yet"}},"schemas":{"AdminBackup":{"description":"Definition of a Domino REST API configuration.","example":{"apps":{"unknown":{"@unid":"0952193E783BF633C12588DB003AA430","author":"CN=chan clement/O=ProjectKeep","client_id":"7a2e3e-bfbc-eb6dfd","client_name":"Manager App","client_uri":"http://test.local","contacts":["CN=chan clement/O=ProjectKeep"],"description":"Created by MANAGER","hasSecret":false,"logo_uri":"cruise","redirect_uris":["http://test.local"],"scope":"managerscope","status":"isActive","token_endpoint_auth_method":"client_secret_basic"}},"databases":{"demort":{"agents":[],"allowCode":true,"allowDecryption":true,"apiName":"demort","description":"test","dqlAccess":true,"dqlFormula":{"formula":"@True","formulaType":"domino"},"formAliases":{},"forms":[{"alias":[],"formModes":[{"computeWithForm":false,"deleteAccessFormula":{"formula":"@False","formulaType":"domino"},"fields":[{"exclusiveMinimum":-1,"format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Body","readOnly":false,"summaryField":true,"type":"TYPE_STRING","uniqueitems":false,"writeOnly":false}],"modeName":"default","onLoad":{"formula":"","formulaType":"domino"},"onSave":{"formula":"","formulaType":"domino"},"readAccessFields":[{"exclusiveMinimum":-1,"format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Body","readOnly":false,"summaryField":true,"type":"TYPE_STRING","uniqueitems":false,"writeOnly":false}],"readAccessFormula":{"formula":"@True","formulaType":"domino"},"required":[],"validationRules":[],"writeAccessFields":[{"exclusiveMinimum":-1,"format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Body","readOnly":false,"summaryField":true,"type":"TYPE_STRING","uniqueitems":false,"writeOnly":false}],"writeAccessFormula":{"formula":"@True","formulaType":"domino"}}],"formName":"fromSalesforce"}],"formulaEngine":"domino","icon":"Base64 stuff, preferably SVG","iconName":"beach","isActive":true,"nsfPath":"Demo.nsf","openAccess":true,"requireRevisionToUpdate":false,"schemaName":"demort","unid":"6C726915B22B8439482588DA00042F96","views":[{"alias":[],"name":"Customers","unid":"86C72C1BF64B6DF04825847100373215"}]},"keepconfig":{"agents":[],"allowCode":true,"allowDecryption":false,"apiName":"keepconfig","description":"Primary directory of this Domain","dqlAccess":true,"dqlFormula":{"formula":"@False","formulaType":"domino"},"formAliases":{},"forms":[],"icon":"Base64 stuff, preferably SVG","iconName":"mountain","isActive":true,"nsfPath":"KeepConfig.nsf","openAccess":true,"requireRevisionToUpdate":false,"schemaName":"keepconfig","views":[]},"names":{"agents":[],"allowCode":false,"allowDecryption":false,"apiName":"names","dqlAccess":false,"dqlFormula":{"formula":"@False","formulaType":"domino"},"formAliases":{},"forms":[],"iconName":"mountain","isActive":false,"nsfPath":"names.nsf","openAccess":true,"requireRevisionToUpdate":false,"schemaName":"names","views":[]}},"version":{"image-build":"2022-10-14T03:03:04Z","keep-desc":"Next generation APIs for HCL Domino","keep-name":"HCL Domino REST API core API","keep-vendor":"HCL Labs","keep-version":"v1.0 (Build 1.9.0-SNAPSHOT-LocalBuild)"}},"properties":{"apps":{"description":"Application configuration. ","type":"object"},"databases":{"description":"All database configuration, including keepconfig(KeepConfig.nsf) which has configuration settings for the Domino REST API. ","type":"object"},"version":{"description":"Basic information about Domino REST API. ","type":"object"}},"title":"Root Type for AdminBackup","type":"object"},"AdminCache":{"description":"Definition of a Domino REST API cache of design element summaries.","example":{"agentcount":2,"apiName":"testdb","cached":true,"formcount":8,"librarycount":0,"nsfPath":"Demo.nsf","viewcount":5},"properties":{"agentcount":{"description":"Agent count exsit in the Domino REST API cache folder. ","format":"int32","type":"integer"},"apiName":{"description":"How this database is known to the API.","type":"string"},"cached":{"description":"If the specified database has been cached, then return true. Otherwise false.  ","type":"boolean"},"formcount":{"description":"Form count exsit in the Domino REST API cache folder. ","format":"int32","type":"integer"},"librarycount":{"description":"Library count exsit in the Domino REST API cache folder. ","format":"int32","type":"integer"},"nsfPath":{"description":"Location on Domino server.","type":"string"},"replicaid":{"description":"A 16-character combination of letters and numbers that represents the replica ID of a Notes database.","type":"string"},"title":{"description":"The title of the database.","type":"string"},"viewcount":{"description":"View count exsit in the Domino REST API cache folder. ","format":"int32","type":"integer"}},"title":"Root Type for AdminCache","type":"object"},"AgentAsyncMessage":{"additionalProperties":false,"description":"The status message of specific agent. ","example":{"status":"running","uuid":"251f1538-5c1d-4b64-b4a5-ae56dade65b6"},"properties":{"status":{"description":"The status of the asynchronous agent. ","type":"string"},"uuid":{"description":"The uuid of the asynchronous agent to check status of.","type":"string"}},"title":"Root Type for AgentAsyncMessage","type":"object"},"AgentInfo":{"description":"Definition of agent information","example":{"alias":["KundenAbruf","ग्राहकों"],"name":"(CustomerUpdates)","unid":"ABCD12345"},"properties":{"alias":{"description":"Collection of alternate names, might match aliases of the Domino design","items":{"type":"string"},"type":"array"},"name":{"description":"Name of the agent, matches design","type":"string"},"unid":{"description":"Primary key to find the agent","type":"string"}},"title":"Root Type for AgentInfo","type":"object"},"AgentPayload":{"additionalProperties":false,"description":"Runs an existing agent in a given database using a specific document as the agent's run context. The is the status message of the response.","example":{"agentName":"processJson"},"properties":{"agentName":{"description":"The agentName in the given database. ","type":"string"},"payload":{"description":"Additional content to pass to the agent","type":"object"}},"title":"Root Type for AgentPayload","type":"object"},"AgentPayloadAsync":{"additionalProperties":false,"description":"payload for /run/agent endpoints","example":{"agentName":"processJson","callbackUrl":"https://www.acme.com/api/callback","method":"POST","payload":{"FirstName":"Adrian","TestBoolean":false,"TestVal":"20"},"runAsServer":false},"properties":{"agentName":{"description":"The name of the agent. ","type":"string"},"callbackUrl":{"description":"URL to call, only used if async=true","type":"string"},"callbackUrlError":{"description":"URL to call if agent responds with status code other than 200. Only used if async=true","type":"string"},"method":{"description":"Http request method you want to use when sending the callbackurl. ","type":"string"},"payload":{"description":"Additional content to pass to the agent","type":"object"},"runAsServer":{"description":"Whether the agent should run as current user or as server. If the agent is designed to only run as the current web user, this property cannot be set to true.","type":"boolean"}},"required":["agentName"],"title":"Root Type for AgentPayloadAsync","type":"object"},"AgentWithContextMessage":{"additionalProperties":false,"description":"Runs an existing agent in a given database using a specific document as the agent's run context. The is the status message of the response.","example":{"agentName":"processJson","returnMode":"default","unid":"36EBDFD11D4381F280258600003ED607"},"properties":{"agentName":{"description":"The agentName in the given database. ","type":"string"},"returnMode":{"description":"The mode configured in Domino REST API. ","type":"string"},"unid":{"description":"The UNID of a document to passing by. NotesSession.documentContext can be used in the agent to access the relevant document. ","type":"string"}},"title":"Root Type for AgentWithContextMessage","type":"object"},"AppInfo":{"description":"Light info on configured OAuth applications","example":{"client_name":"localdemo","client_uri":"https://www.wissel.net/","description":"Showcasing OAUTH possibilities","logo_uri":"compass"},"properties":{"client_name":{"type":"string"},"client_uri":{"type":"string"},"description":{"type":"string"},"logo_uri":{"type":"string"}},"title":"Root Type for AppInfo","type":"object"},"AttachmentsUNIDResponseMessage":{"additionalProperties":false,"description":"The response message for attachments/unid","example":{"filename":"1.txt","status":"upload complete"},"properties":{"filename":{"description":"The filename user has uploaded.","items":{"type":"string"},"type":"array"},"status":{"description":"Short descriptive message","type":"string"}},"title":"Root Type for AttachmentsUNIDResponseMessage","type":"object"},"AuthResult":{"additionalProperties":false,"description":"Result of a JWT login. Contains the JWT token and for convenience the claim in JSON readable format","example":{"bearer":"some.jwt.string","claims":{"iss":"SomeCert","scopes":"MAIL $DATA","sub":"CN=John Doe/O=Mauraders"},"expSeconds":21600,"issueDate":"2021-04-01T01:32:34+08:00","leeway":5},"properties":{"bearer":{"description":"JWT Token for system access","type":"string"},"claims":{"description":"Human readable JSON on the JWT claim content"},"expSeconds":{"description":"Expire time in seconds. ","format":"int32","type":"integer"},"issueDate":{"format":"date-time","type":"string"},"leeway":{"description":"The JWT library makes use of a leeway (in seconds) to account for when there is a clock skew times between the signing and verifying servers. Allow for a small leeway when checking whether a token has expired.","format":"int32","type":"integer"}},"title":"Root Type for AuthResult","type":"object"},"BasicAuthForOauthFlow":{"description":"API way to get a token for Domino IdP login","example":{"password":"supersecret","scope":"oauth","username":"FirstName LastName"},"properties":{"password":{"description":"Password, not written on a Post-it","format":"password","type":"string"},"scope":{"description":"mandatory scope value of 'oauth'\n","enum":["oauth"],"type":"string"},"username":{"description":"Who you are or your eMail","type":"string"}},"required":["password","scope","username"],"title":"Root Type for BasicAuthForOauthFlow","type":"object"},"BasicAuthRequest":{"additionalProperties":false,"description":"API way to get a token","example":{"password":"supersecret","scope":"MAIL $DATA","username":"FirstName LastName"},"properties":{"password":{"description":"Password, not written on a Post-it","example":"supersecret","format":"password","type":"string"},"scope":{"description":"Optional approved scopes. A scope is a string, the scope field a series of space separated strings. If omitted the default value \"MAIL $DATA\" that give access to PIM functions and any database the user has access to. Other scopes can be the name of database aliases like \"demo\", \"crm\". The values are case sensitive. Regular database scopes are lower case. Scopes can't open access, that's what ACLs do, but limit them. For a user driven login, this makes limited sense, so it is mostly to achieve JWT parameter parity, so scopes can be tested without an IdP issuing a JWT at the end of an OAuth process\n","example":"crm","type":"string"},"username":{"description":"Who you are or your eMail","example":"John Doe","type":"string"}},"required":["password","username"],"title":"Root Type for BasicAuthRequest","type":"object"},"BulkCreateDocuments":{"description":"Upload an array of JSON objects to create new documents each","example":{"documents":[{"Color":"Purple","Form":"Customer","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"Customer","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"Customer","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"Customer","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"},{"Color":"Purple","Form":"Customer","Pet":"Bandicoot, long-nosed","email":"kaaronsohnf5@goo.ne.jp","first_name":"Kristoffer","gender":"Male","last_name":"Aaronsohn"}]},"properties":{"documents":{"description":"JSON source for new Documents","items":{"$ref":"#/components/schemas/DominoDocument"},"type":"array"}},"required":["documents"],"title":"Root Type for BulkCreateDocuments","type":"object"},"BulkFolderDocuments":{"additionalProperties":false,"description":"Collection of UNIDs for bulk folder operations","example":{"action":"add","folderName":"Inbox","mode":"default","unids":["1234567890ABCDEF1234567890ABCDEF","2234567890ABCDEF1234567890ABCDEA","ABCDEF1234567890ABCDEF1234567890"]},"properties":{"action":{"description":"Folder add/remove action","enum":["add","remove"],"type":"string"},"folderName":{"description":"Name of the folder to add/remove documents to/from","type":"string"},"mode":{"description":"mode to use to act on the documents. defaults to default","type":"string"},"unids":{"description":"List of UNIDs to act upon","items":{"$ref":"#/components/schemas/UnidWritable"},"type":"array"}},"required":["action","folderName"],"title":"Root Type for BulkUnids","type":"object"},"BulkUnids":{"additionalProperties":false,"description":"Collection of UNIDs for bulk retrieval or deletions","example":{"mode":"default","unids":["1234567890ABCDEF1234567890ABCDEF","2234567890ABCDEF1234567890ABCDEA","ABCDEF1234567890ABCDEF1234567890"]},"properties":{"markRead":{"description":"Mark retrieved documents as read by the current user","type":"boolean"},"markUnread":{"description":"Mark retrieved documents as unread by the current user","type":"boolean"},"mode":{"description":"mode to use to act on the documents. defaults to default","type":"string"},"unids":{"description":"List of UNIDs to act upon","items":{"$ref":"#/components/schemas/UnidWritable"},"type":"array"}},"title":"Root Type for BulkUnids","type":"object"},"BulkUpdateDocuments":{"additionalProperties":false,"description":"Update documents based on a query, a form mode and a set of fields to be updated","example":{"maxScanDocs":500000,"maxScanEntries":200000,"mode":"default","noViews":false,"query":"Form = 'Marketing' and Newsletter = 'Weekly' and Color = ?Color","replaceItems":{"Newsletter":"every week"},"timeoutSecs":300,"variables":{"Color":"Maroon","Pet":"Giraffe"},"viewRefresh":true},"properties":{"count":{"description":"How many to return default is maxInt","type":"number"},"maxScanDocs":{"description":"Limit the number of documents to be scanned","format":"int32","type":"integer"},"maxScanEntries":{"description":"Limit the entries (see DQL documentation for it)","format":"int32","type":"integer"},"mode":{"description":"Form mode as configured for any of the forms returned by the query","type":"string"},"noViews":{"description":"Disable use of views when true","type":"boolean"},"query":{"description":"DQL query string","type":"string"},"replaceItems":{"description":"Key value pairs, subject to form mode scrutiny","type":"object"},"returnUpdatedDocument":{"description":"Should contain updated document in the response","type":"boolean"},"start":{"description":"Default is 0.","type":"integer"},"timeoutSecs":{"description":"Query timeout in seconds","format":"int32","type":"integer"},"variables":{"description":"Key/Value to replace ?Variables","type":"object"},"viewRefresh":{"description":"Should views get refreshed?","type":"boolean"}},"title":"Root Type for BulkUpdateDocuments","type":"object"},"ConsentInfo":{"description":"Provies information about the users consent values","example":{"client_id":"7e06d6-ed62-0f5c1c","code_expires_at":"somedatetimevalue","redirect_uri":"http://localhost:8880","refresh_token_expires_at":"somedatetimevalue","scope":"CN=Jane Doe/O=SomeOrg","username":"CN=Jane Doe/O=SomeOrg"},"properties":{"client_id":{"type":"string"},"code_expires_at":{"type":"string"},"redirect_uri":{"type":"string"},"refresh_token_expires_at":{"type":"string"},"scope":{"type":"string"},"username":{"type":"string"}},"title":"Root Type for ConsentInfo","type":"object"},"DatabaseEntry":{"additionalProperties":false,"description":"A database living on the sever's file system. Eventually with the API names it is known for","example":{"apiNames":["addresses","systemdb"],"nsfPath":"names.nsf","title":"Tango Addressbook"},"properties":{"apiNames":{"items":{"type":"string"},"type":"array"},"nsfPath":{"type":"string"},"title":{"type":"string"}},"title":"Root Type for DatabaseEntry","type":"object"},"DesignAgentSimple":{"description":"Definition design information for specific design element Agent.","example":{"@documentset":"SELECTED","@name":"Fix Body","@noteid":"","@trigger":"MANUAL","@type":"LOTUSSCRIPT","@unid":"3F8E64B529DA6CF848258435004A37CC","@validForKeep":""},"properties":{"@documentset":{"description":"Represents a specified set of target documents that are manipulated by an agent.\n\nThe following types run an agent on:\n\nall - All the documents in the database.\n\nallinview - All documents in a view.\n\nmodified - All new and modified documents.\n\nrunonce - The current document once.\n\nselected - Only the selected documents.\n\nunreadinview - All unread documents in a view.\n\nnone","type":"string"},"@name":{"description":"The name of the agent.","type":"string"},"@noteid":{"description":"The note ID of the agent, which is uniquely identifies a document within a particular database.","type":"string"},"@trigger":{"description":"Indicates when this agent runs.","readOnly":true,"type":"string"},"@type":{"description":"Indicates the type of the agent (simple action, formula, LotusScript, imported Java, or Java).","type":"string"},"@unid":{"description":"The Note UNID of the agent.","type":"string"},"@validForKeep":{"description":"If this agent has been configured to use in Domino REST API. ","readOnly":true,"type":"boolean"}},"title":"Root Type for DesignAgentSimple","type":"object"},"DesignColumnSimple":{"description":"This is one Datatype used to compose other schemas, DesignViewSimple and DesignViewSimpleRequest","properties":{"formula":{"description":"","type":"string"},"name":{"description":"","type":"string"},"separateMultipleValues":{"description":"","type":"boolean"},"sort":{"description":"","enum":["ascending","descending","none"],"type":"string"},"title":{"description":"","type":"string"}},"required":["formula","name","separateMultipleValues"],"type":"object"},"DesignFieldSimple":{"description":"This is one Datatype used to compose other schemas, DesignFormSimple, DesignFormSimpleRequest and DesignSubFormSimple","properties":{"allowMultiValues":{"description":"","type":"boolean"},"name":{"description":"","type":"string"},"type":{"description":"","enum":["datetime","number","richtext","text"],"type":"string"}},"required":["name","type"],"type":"object"},"DesignFormSimple":{"description":"Definition design information for specific design element Form.","example":{"$FILES":{"kind":"editable","type":"attachment"},"@alias":"TestForm","@conflictaction":"createconflicts","@created":{"kind":"editable","type":"datetime"},"@hide":"web mobile","@name":"TestForm","@noteid":"276","@unid":"360A6B7035CD03C248258816000DDB47","Color":{"kind":"editable","type":"text"},"Pet":{"kind":"editable","type":"text"},"email":{"kind":"editable","type":"text"},"first_name":{"kind":"editable","type":"text"},"gender":{"kind":"editable","type":"text"},"ip_address":{"kind":"editable","type":"text"},"last_name":{"kind":"editable","type":"text"}},"properties":{"@alias":{"description":"Alternate names or alias of the form.","example":"TestForm","readOnly":true,"type":"string"},"@conflictaction":{"description":"Indicates how to handle form replication conflicts. ","example":"createconflicts","readOnly":true,"type":"string"},"@hide":{"readOnly":true,"type":"string"},"@name":{"description":"The name of the form.","example":"TestForm","readOnly":true,"type":"string"},"@noteid":{"description":"The note ID of a document, which is uniquely identifies a document within a particular database.","example":"276","readOnly":true,"type":"string"},"@unid":{"description":"Universal Id of the document, uniquely identifies a document across all replicas of a database","example":"360A6B7035CD03C248258816000DDB47","readOnly":true,"type":"string"},"fields":{"description":"The fields on a forms. ","items":{"$ref":"#/components/schemas/DesignFieldSimple"},"type":"array"}},"required":["fields","name"],"type":"object"},"DesignFormSimpleRequest":{"description":"Definition of request to create specific design element Form.","example":{"alias":"","fields":[{"allowmultivalues":false,"name":"email","type":"text"},{"allowmultivalues":false,"name":"name","type":"text"},{"allowmultivalues":true,"name":"newField","type":"text"}],"name":"Entry"},"properties":{"alias":{"description":"Alternate names or alias of the form.","type":"string"},"fields":{"description":"The fields on a forms. ","items":{"$ref":"#/components/schemas/DesignFieldSimple"},"type":"array"},"name":{"description":"The name of the form.","type":"string"}},"title":"Root Type for DesignFormSimpleRequest","type":"object"},"DesignNSFSimple":{"additionalProperties":false,"description":"Basic database object. NOTE: This is fit for limited current purpose, not complete for production","properties":{"nsfPath":{"description":"Path in internet style relative to the Domino data directory","example":"crm/customers.nsf","type":"string"},"templateName":{"description":"programmatic filename of the template, like 'demo.ntf'","example":"DAOSsnap.ntf","type":"string"},"title":{"description":"Datbase title","example":"Our esteemed customers","type":"string"}},"required":["nsfPath","title"],"type":"object"},"DesignSubFormSimple":{"description":"Definition design information for specific design element Form.","example":{"@alias":"subFormAlias","@conflictaction":"createconflicts","@hide":"","@name":"subFormSharedField","@noteid":"282","@unid":"CC96242D1260ED3B4825881E002A410B","Group":{"allowmultivalues":false,"kind":"editable","type":"text"},"Group_Leader":{"allowmultivalues":false,"kind":"editable","type":"text"}},"properties":{"@alias":{"description":"Alternate names or alias of the form.","example":"subFormAlias","readOnly":true,"type":"string"},"@conflictaction":{"description":"Indicates how to handle form replication conflicts. ","example":"createconflicts","readOnly":true,"type":"string"},"@hide":{"readOnly":true,"type":"string"},"@name":{"description":"The name of the form.","example":"subFormSharedField","readOnly":true,"type":"string"},"@noteid":{"description":"The note ID of a document, which is uniquely identifies a document within a particular database.","example":"276","readOnly":true,"type":"string"},"@unid":{"description":"Universal Id of the document, uniquely identifies a document across all replicas of a database","example":"360A6B7035CD03C248258816000DDB47","readOnly":true,"type":"string"},"fields":{"description":"The fields on a subform. ","items":{"$ref":"#/components/schemas/DesignFieldSimple"},"type":"array"}},"title":"Root Type for DesignSubFormSimple","type":"object"},"DesignViewSimple":{"description":"Definition design information for specific design element View.","example":{"$0":{"formula":"@DocNumber","title":"#"},"$1":{"formula":"@Created","title":"Created"},"@alias":"","@name":"Customers","@noteid":"1be","@unid":"86C72C1BF64B6DF04825847100373215","Color":{"formula":"","title":"Color"},"Pet":{"formula":"","title":"Pet"},"email":{"formula":"","title":"eMail"},"first_name":{"formula":"","title":"FirstName"},"last_name":{"formula":"","title":"LastName"}},"properties":{"@alias":{"description":"Alternate names or alias of the view.","readOnly":true,"type":"string"},"@name":{"description":"The name of the view.","example":"Customers","readOnly":true,"type":"string"},"@noteid":{"description":"The note ID of a view, which is uniquely identifies a view within a particular database.","example":"222","readOnly":true,"type":"string"},"@unid":{"description":"Universal Id of the view, uniquely identifies a view across all replicas of a database","example":"86C72C1BF64B6DF04825847100373215","readOnly":true,"type":"string"},"columns":{"description":"","items":{"$ref":"#/components/schemas/DesignColumnSimple"},"type":"array"},"selectionFormula":{"description":"","type":"string"}},"required":["columns","name","selectionFormula"],"type":"object"},"DesignViewSimpleRequest":{"description":"Definition of request to create specific design element View.","example":{"columns":[{"formula":"email","name":"email","separatemultiplevalues":false,"sort":"ascending","title":"email"},{"formula":"name","name":"name","separatemultiplevalues":false,"sort":"ascending","title":"name"}],"name":"entries","selectionFormula":"Form = \"Entry\""},"properties":{"columns":{"description":"","items":{"$ref":"#/components/schemas/DesignColumnSimple"},"type":"array"},"name":{"description":"The name of the view.","type":"string"},"selectionFormula":{"description":"The formula to select documents for a view. ","type":"string"}},"title":"Root Type for DesignViewSimpleRequest","type":"object"},"DocumentExistencePayload":{"description":"An object keyed by UNID and containing existence/etag status","example":{"12345":{"etag":"67890","exists":true}},"title":"Root Type for DocumentExistencePayload","type":"object"},"DocumentMeta":{"description":"Meta data common to all Domino documents that are read-only with the exception of form","example":{"created":"2021-07-26T11:03:48-05:00","etag":"W/\" 60fedce4\"","isEditable":false,"lastaccessed":"2021-12-15T17:14:44+01:00","lastmodified":"2021-07-26T11:03:48-05:00","noteid":90370,"revision":"cfb7351dd41a90f4e0c9afc06e30e59b","size":114,"unid":"6834F14BE9CA69F68525871E00583D1B","unread":true},"properties":{"Form":{"description":"Value of form item of a given document","type":"string"},"created":{"description":"Date of document creation in ISO format","example":"2021-07-26T11:03:48-05:00","format":"date-time","readOnly":true,"type":"string"},"etag":{"description":"Weak ETag of the current document","example":"W/\\\" 60fedce4\\\"","readOnly":true,"type":"string"},"isEditable":{"description":"Could the user who retrieved a document update it","type":"boolean"},"lastaccessed":{"description":"Last access date of a document","example":"2021-07-26T11:03:48-05:00","format":"date-time","readOnly":true,"type":"string"},"lastmodified":{"description":"Last update date of a document","example":"2021-07-26T11:03:48-05:00","format":"date-time","readOnly":true,"type":"string"},"noteid":{"description":"Local (current NSF only) primary key of a document","example":"90370","readOnly":true,"type":"integer"},"revision":{"description":"This field records the current revision version of document. It's a 32-character hex-encoded string of date. \n\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.","example":"cfb7351dd41a90f4e0c9afc06e30e59b","type":"string"},"size":{"description":"size in byte of a document or json result","example":"114","readOnly":true,"type":"integer"},"unid":{"$ref":"#/components/schemas/Unid","description":"Primary key of a document, unique across NSF databases with matching replicaIds","example":"6834F14BE9CA69F68525871E00583D1B"},"unread":{"description":"Is the document unread by the current user","example":"true","readOnly":true,"type":"boolean"}},"required":["Form"],"title":"DocumentMeta","type":"object"},"DocumentSimpleRequest":{"additionalProperties":{"anyOf":[{"items":{"type":"boolean"},"type":"array"},{"items":{"type":"number"},"type":"array"},{"items":{"type":"object"},"type":"array"},{"items":{"type":"string"},"type":"array"},{"nullable":true,"type":"string"},{"type":"boolean"},{"type":"number"},{"type":"object"}],"description":"Document specific fields with single or multi value","nullable":true},"description":"This is a sample Json format request body to create a domino document. The fields properties are just examples for one testform. ","example":{"Color":"Pthalo Blue","Form":"Customer","Pet":"American Howling Retriever","email":"wandrews@canofsleep.com","first_name":"Winslow","gender":"Male","ip_address":"192.168.1.1","last_name":"Andrews"},"properties":{"Form":{"description":"The form name you want to operate with. ","type":"string"}},"title":"Root Type for DocumentSimpleRequest","type":"object"},"DocumentSimpleRequestUpdate":{"additionalProperties":{"anyOf":[{"items":{"type":"boolean"},"type":"array"},{"items":{"type":"number"},"type":"array"},{"items":{"type":"object"},"type":"array"},{"items":{"type":"string"},"type":"array"},{"nullable":true,"type":"string"},{"type":"boolean"},{"type":"number"},{"type":"object"}],"description":"Document specific fields with single or multi value","nullable":true},"description":"This is a sample Json format request body to update a domino document. The fields properties are just examples for one testform. ","example":{"Color":"Pthalo Blue","Pet":"American Howling Retriever","email":"wandrews@canofsleep.com","first_name":"Winslow","gender":"Male","ip_address":"192.168.1.1","last_name":"Andrews"},"title":"Root Type for DocumentSimpleRequestUpdate","type":"object"},"DominoDocument":{"additionalProperties":{"anyOf":[{"items":{"type":"boolean"},"type":"array"},{"items":{"type":"number"},"type":"array"},{"items":{"type":"object"},"type":"array"},{"items":{"type":"string"},"type":"array"},{"nullable":true,"type":"number"},{"nullable":true,"type":"string"},{"type":"boolean"},{"type":"object"}],"description":"Document specific fields with single or multi value","nullable":true},"description":"The JSON representation of a Domino document consisting of attributes (starting with @) and NotesItem having a name and one or more values","example":{"@meta":{"created":"2021-07-26T11:03:48-05:00","etag":"W/\" 60fedce4\"","isEditable":true,"lastaccessed":"2021-12-15T17:14:44+01:00","lastmodified":"2021-07-26T11:03:48-05:00","noteid":90370,"size":114,"unid":"6834F14BE9CA69F68525871E00583D1B","unread":true},"Color":"Red","Form":"Customer","Pet":"Black-capped chickadee","body":{"content":"PGh0bWw+Cjxib2R5Pgo8aDIgc3R5bGU9ImNvbG9yOiAjMmU2YzgwOyI+S2VlcCBNaW1lPC9oMj4KPC9ib2R5Pgo8L2h0bWw+","encoding":"BASE64","type":"text/html"},"email":"gbranthwaite0@nba.com","first_name":"George","gender":"Male","ip_address":"91.254.204.27","last_name":"Hammer"},"properties":{"@meta":{"$ref":"#/components/schemas/DocumentMeta","description":"Document meta data on request"},"Form":{"description":"Form of a document, used to determine additionalProperties in detail","example":"Customer","type":"string"}},"required":["Form"],"title":"DominoDocument","type":"object"},"EmptyObject":{"description":"An empty JSON object, used for POST requests that require no input","example":{},"title":"Root Type for EmptyObject","type":"object"},"ErrorMessage":{"description":"Detailed error message, might contain stacktrace","example":{"details":"Long list of details","message":"We screwed up","status":500},"properties":{"details":{"type":"string"},"message":{"type":"string"},"status":{"format":"int32","type":"integer"}},"title":"Root Type for ErrorMessage","type":"object"},"ExecutionRequest":{"description":"Code sent to server to be executed and results returned","example":{"context":{"collection":["id","id2","id3"],"document":"someunid","query":"","view":"($All)"},"payload":"DIM db as NotesDatabase\nDim doc as NotesDocument"},"properties":{"context":{"description":"The data context to be provided for the call.\nBy default `session` and `database` are given, more based on this property"},"payload":{"description":"code to be executed","type":"string"}},"required":["context","payload"],"title":"Root Type for ExecutionRequest","type":"object"},"ExecutionResult":{"description":"Outcome of an operation","example":{"console":"Some output\nNextLine\nNextLine","results":[{"id":"2136198263921","items":{"age":42,"name":"Joe"}}],"status":"success"},"properties":{"console":{"description":"Anything that went out with print(\"Hello World\") in the agent","type":"string"},"results":{"description":"Array of execution results, should the agent write results","items":{"properties":{"id":{"type":"string"},"items":{"properties":{"age":{"format":"int32","type":"integer"},"name":{"type":"string"}},"type":"object"}},"type":"object"},"type":"array"},"status":{"description":"Success or failure or error count","type":"string"}},"title":"Root Type for ExecutionResult","type":"object"},"FormulaRequest":{"additionalProperties":false,"description":"Body of a post to /run/formula to test or run a formula\nIf save is set to true, user must be the same as current user\n\nCannot set value for both a document unid and a dql query","example":{"formula":"@IsMember(\"[admin]\";@UserRoles)","query":"","save":false,"type":"domino","unid":"0624B6B9167EF29F48258614006F9A75","user":"Peter Pan/Neverland"},"properties":{"formula":{"description":"The actual formula","type":"string"},"query":{"description":"DQL Query to build a collection to run the formula against (and eventually save it)","type":"string"},"save":{"description":"Should the document be saved back","type":"boolean"},"type":{"description":"What type of formula shall be tested: Domino or OpenFormula","enum":["domino","openformula"],"type":"string"},"unid":{"description":"UniqueId of a document to test against. Can be empty if formula doesn't rely on fields in a document","type":"string"},"user":{"description":"User to be tested, can be empty if current user","type":"string"}},"required":["formula","save","type","user"],"title":"Root Type for FormulaRequest","type":"object"},"FormulaResult":{"description":"Return value when requesting formula execution","example":{"result":[{"result":[0],"unid":"8C525AE6BE15DB6148258831001F5B7F"},{"result":[0],"unid":"AA78E397F5397D054825883100453848"}]},"properties":{"request":{"$ref":"#/components/schemas/FormulaRequest","description":"The original request"},"result":{"description":"What was the outcome of the evaluation","items":{"$ref":"#/components/schemas/FormulaResultElement"},"type":"array"}},"required":["request","result"],"title":"Root Type for FormulaResult","type":"object"},"FormulaResultElement":{"description":"One simple element of return value when requesting formula execution","example":{"result":["formulaResult1","formulaResult2"],"unid":"documentUnid"},"properties":{"result":{"description":"Result is returned as an array.","items":{},"type":"array"},"unid":{"description":"Unique ID of document formula result is from.  If no document or query specified, unid will be an empty string","type":"string"}},"required":["result","unid"],"title":"Root Type for FormulaResultElement","type":"object"},"KeepAccess":{"description":"Provides information of access level required for Domino REST API operations:\n- Domino REST API mapping in Domino directory\n- Domino REST API configuration in individual databases\n\nMasks ACL and Role checks for users of the API","example":{"CreateDbMapping":true,"DeleteDbMapping":true,"databases":[{"activeConfigurations":{"demotest":"demotest"},"configurations":["demotest"],"createDeleteKeepConfig":true,"path":"demo.nsf","readKeepConfig":true},{"activeConfigurations":{"names":"names"},"configurations":["names"],"createDeleteKeepConfig":true,"path":"names.nsf","readKeepConfig":true}]},"properties":{"CreateDbMapping":{"description":"Can the current user create Domino REST API configuration mappings","type":"boolean"},"DeleteDbMapping":{"description":"Can the current user delete Domino REST API configuration mappings","type":"boolean"},"databases":{"description":"Details of access to a given database","items":{"$ref":"#/components/schemas/KeepAccessDetail"},"type":"array"}},"required":["CreateDbMapping","DeleteDbMapping"],"title":"Root Type for KeepAccess","type":"object"},"KeepAccessDetail":{"description":"Information about access to an individual database and, if access is sufficient, information about available configurations","example":{"activeConfigurations":{"demo":"demo"},"configurations":[{"description":"Get approvals for training, travel and gear","iconName":"sell","name":"default2"},{"description":"Schema alternateapprovals","iconName":"mountain","name":"alternateapprovals"},{"description":"central approval","iconName":"archeology","name":"capprov"}],"createDeleteKeepConfig":true,"path":"demo.nsf","readKeepConfig":true},"properties":{"activeConfigurations":{"description":"Map of confgurations in use. Key is the public name, value the NSF internal name","example":"{\n    \"demo\": \"demo\"\n}","items":{"type":"object"},"type":"array"},"configurations":{"description":"List of Domino REST API configurations, ready to be mapped, in the design of a database","example":"[\n    {\n        \"name\": \"alternateapprovals\",\n        \"description\": \"Schema alternateapprovals\",\n        \"iconName\": \"mountain\"\n    },\n    {\n        \"name\": \"capprov\",\n        \"description\": \"central approval\",\n        \"iconName\": \"archeology\"\n    },\n    {\n        \"name\": \"default2\",\n        \"description\": \"Get approvals for training, travel and gear\",\n        \"iconName\": \"sell\"\n    }\n]","items":{"$ref":"#/components/schemas/KeepAccessQuery"},"type":"array"},"createDeleteKeepConfig":{"description":"Can the current user create or delete Domino REST API configurations","example":"true","type":"boolean"},"path":{"description":"Path relativ to the data directory of an NSF","example":"apps/demo.nsf","type":"string"},"readKeepConfig":{"description":"Can the given user read existing Domino REST API configurations","example":"true","type":"boolean"}},"title":"Root Type for KeepAccessDetail","type":"object"},"KeepAccessQuery":{"description":"Query to be send to check if user can read/update/delete Domino REST API configurations","example":{"checkAllNsf":false,"databases":["apps/crm.nsf","demo.nsf"],"onlyConfigured":false},"properties":{"checkAllNsf":{"description":"Should the query check all databases on the current server - might take a while. Excludes mail files","example":"false","type":"boolean"},"databases":{"description":"List of file path to enquiry","items":{"type":"string"},"type":"array"},"onlyConfigured":{"description":"Should only databases with existing Domino REST API configurations be returned","type":"boolean"}},"required":["checkAllNsf","onlyConfigured"],"title":"Root Type for KeepAccessQuery","type":"object"},"KeepAccessShort":{"description":"Provides simple information of access level required for Domino REST API access get operations:\n- Domino REST API mapping in Domino directory\n- Domino REST API configuration in individual databases\n\nMasks ACL and Role checks for users of the API","example":{"CreateDbMapping":true,"DeleteDbMapping":true},"properties":{"CreateDbMapping":{"description":"Can the current user create Domino REST API configuration mappings","type":"boolean"},"DeleteDbMapping":{"description":"Can the current user delete Domino REST API configuration mappings","type":"boolean"}},"title":"Root Type for KeepAccessShort","type":"object"},"KeepDBShort":{"description":"Entry available in Domino REST API","example":{"apiName":"keepconfig","description":"Configuration settings for the Domino REST API, handle with care","isActive":true,"nsfPath":"KeepConfig.nsf","schemaName":"keepconfig"},"properties":{"apiName":{"description":"How this database is known to the API","type":"string"},"description":{"description":"Description with human readable details of the database's purpose","type":"string"},"icon":{"description":"Base64 encoded icon (preferably svg)","type":"string"},"iconName":{"description":"Alt text for icon","type":"string"},"isActive":{"description":"is the definition currently in use","type":"boolean"},"nsfPath":{"description":"Location on Domino server","type":"string"},"schemaName":{"description":"The internal schema name used","type":"string"}},"title":"Root Type for KeepDBShort","type":"object"},"KeepDatabase":{"description":"REST API Configuration of a domino database including views, forms, agents, modes. Used only for admin endpoints.","example":{"@unid":"3D59BBE2676B2A45002588FD001E4B2A","agents":[],"allowCode":true,"allowDecryption":true,"description":"Demo database","dqlAccess":true,"dqlFormula":{"formula":"@True","formulaType":"domino"},"formAliases":{"Customer":"Customer","Entry":"Entry","IdPConfig":"IdP Configuration","OdataSampleForm":"OdataSampleForm","SampleEntry":"SampleEntry","TestForm":"TestForm"},"forms":[{"alias":[],"formModes":[{"computeWithForm":false,"deleteAccessFormula":{"formula":"@False","formulaType":"domino"},"fields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"authors","itemFlags":["READWRITERS","SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Owner","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"richtext","itemFlags":[],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Body","summaryField":false,"type":"object","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"hobbies","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"email","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"employee_count","summaryField":true,"type":"integer","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"first_name","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"last_name","summaryField":true,"type":"string","uniqueitems":false}],"modeName":"default","onLoad":{"formula":"","formulaType":"domino"},"onSave":{"formula":"","formulaType":"domino"},"readAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"authors","itemFlags":["READWRITERS","SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Owner","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"richtext","itemFlags":[],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Body","summaryField":false,"type":"object","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"hobbies","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"email","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"employee_count","summaryField":true,"type":"integer","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"first_name","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"last_name","summaryField":true,"type":"string","uniqueitems":false}],"readAccessFormula":{"formula":"@True","formulaType":"domino"},"required":["Form","email","first_name"],"validationRules":[],"writeAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"authors","itemFlags":["READWRITERS","SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Owner","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"richtext","itemFlags":[],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Body","summaryField":false,"type":"object","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"hobbies","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"email","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"employee_count","summaryField":true,"type":"integer","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"first_name","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"last_name","summaryField":true,"type":"string","uniqueitems":false}],"writeAccessFormula":{"formula":"@True","formulaType":"domino"}}],"formName":"Customer"},{"alias":[],"formModes":[{"computeWithForm":false,"deleteAccessFormula":{"formula":"@False","formulaType":"domino"},"fields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Shape","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Taste","summaryField":true,"type":"string","uniqueitems":false}],"modeName":"default","onLoad":{"formula":"","formulaType":"domino"},"onSave":{"formula":"","formulaType":"domino"},"readAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Shape","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Taste","summaryField":true,"type":"string","uniqueitems":false}],"readAccessFormula":{"formula":"@True","formulaType":"domino"},"required":[],"validationRules":[],"writeAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Shape","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","itemFlags":["SUMMARY"],"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Taste","summaryField":true,"type":"string","uniqueitems":false}],"writeAccessFormula":{"formula":"@True","formulaType":"domino"}}],"formName":"SampleForm"}],"formulaEngine":"domino","icon":"Base64 stuff, preferably SVG","iconName":"mountain","isActive":true,"nsfPath":"Demo.nsf","openAccess":true,"requireRevisionToUpdate":false,"schemaName":"demoapi","views":[{"alias":["($All)"],"name":"($All)","unid":"0E35D520A1EBBB5B48258435003E8284"},{"alias":["ChineseCustomers"],"name":"ChineseCustomers","unid":"3FE5CD63E179F21600258680006DB25B"},{"alias":["Customers"],"name":"Customers","unid":"86C72C1BF64B6DF04825847100373215"},{"alias":["MarketingInfo"],"name":"MarketingInfo","unid":"10EA9EC66EA748BC4825851100420810"},{"alias":["Samples"],"name":"Samples","unid":"5318911D496571410025860D00544B17"}]},"properties":{"@unid":{"description":"Universal Id of the document to be acted upon","readOnly":true,"type":"string"},"agents":{"description":"List of agents that are permitted to be called from the API","items":{"$ref":"#/components/schemas/AgentInfo"},"type":"array"},"allowCode":{"description":"Can JS code be submitted for execution","type":"boolean"},"allowDecryption":{"description":"Allow decrypt the database","type":"boolean"},"apiName":{"description":"How this database is known to the API","type":"string"},"availableViews":{"description":"Array of Views that are available in the Domino REST API","items":{"$ref":"#/components/schemas/ViewInfo"},"type":"array"},"cacheTimestamp":{"description":"timestamp for when design data were last added","type":"integer"},"configuredForms":{"description":"All forms that are configured for access via the Domino REST API. Details in keepdatabaseconfig_formmode","items":{"readOnly":true,"type":"string"},"type":"array"},"description":{"description":"Description with human readable details of the database's purpose","type":"string"},"dqlAccess":{"description":"Does the API allow DQL queries to be submitted? DQL can query any document. Handle with care","type":"boolean"},"dqlFormula":{"$ref":"#/components/schemas/KeepFormula","description":"Formula to execute when DQL Access is permitted to determine if it is permitted for the current user.\nDomino or OpenFormula"},"dxlpath":{"description":"DXL path for this database","readOnly":true,"type":"string"},"formAliases":{"description":"Collection of key / value pairs to map primary form names to potential alias values. A Notes document created with a form containing the alias will have the last alias value in its Form field","type":"object"},"forms":{"description":"Array with form configurations including form modes","items":{"$ref":"#/components/schemas/KeepForm"},"type":"array"},"formulaEngine":{"description":"Script engine to be used to resolve permission formulas in FormModes or DQL access.\nNative Domino, OpenFormula or JavaScript\n\nCurrently only Native Domino is implemented","enum":["domino","javascript","openformula"],"type":"string"},"icon":{"description":"Base64 of an icon. SVG preferred","type":"string"},"iconName":{"description":"alt text for icon","type":"string"},"isActive":{"description":"Allows to enable/disable API access without removing cofiguration. This is used for scope. active is used for schema. ","type":"boolean"},"nsfPath":{"description":"Location on Domino server","type":"string"},"openAccess":{"description":"Can this database be accessed from a browser e.g. in a React app) or app without providing AppId and AppSecret. Still proper authentication using a JWT bearer is required","type":"boolean"},"prohibitRefresh":{"description":"indicates if the schema is protected against refresh by the design tast","type":"boolean"},"requireRevisionToUpdate":{"description":"If db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.\r\n ","type":"boolean"},"schemaName":{"description":"name (without .json extension) of schema file in nsf REST file resources","type":"string"},"views":{"description":"Array of Views that are available in the Domino REST API","items":{"$ref":"#/components/schemas/ViewInfo"},"type":"array"}},"required":["formulaEngine","isActive","nsfPath"],"title":"Root Type for KeepDatabase","type":"object"},"KeepField":{"description":"Field description for fields / items in a KeepFormMode.\nDescribes name, type, and multi-value capability.\nModeled after json-schema where multi-value = array\nextension to json-schema limited to x-access-name\nto specify Domino Names, Reader, Author nature\nAll other field copied from JSON Schema","example":{"exclusiveMinimum":-1,"fieldAccess":"RW","fieldGroup":"person","items":{"exclusiveMinimum":-1,"fieldAccess":"RW","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"type":"integer","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Age","type":"array","uniqueitems":false},"properties":{"description":{"description":"Long text explanation what the field is about","example":"Enter the following information yada yada yada","type":"string"},"exclusiveMinimum":{"description":"Minimum value, not included","example":"4","type":"number"},"fieldAccess":{"description":"Determines the access to a field as Read/Write, ReadOnly or WriteOnly","enum":["RO","RW","WO"],"type":"string"},"fieldGroup":{"description":"Domino multi-value fields can be grouped together to form a kind oc child record in a document. The fieldGroup defines such a grouping. It only is relevant for multi-value fields and isn't populated by default","example":"recipients","type":"string"},"format":{"description":"Format definition for Strings, extended from json-schema with readers, authors, names, json","enum":["attachments","authors","binary","boolean","byte","date","date-time","double","float","int32","int64","json","names","password","readers","richtext","string"],"example":"names","type":"string"},"items":{"description":"Item description can contain type and format","type":"object"},"maxLength":{"description":"not longer than that","example":"93","type":"integer"},"maximum":{"description":"maximum value, not included","example":"42","type":"number"},"minLength":{"description":"Low long is a String","example":"4","type":"integer"},"minimum":{"description":"lowest value, value included","example":"2","type":"number"},"minitems":{"description":"for array type: minimum number of items","example":"2","type":"integer"},"multivalue":{"description":"Can the field process multiple values, HCL Domino style.\nWhen missing => false","example":"true","readOnly":true,"type":"boolean"},"name":{"description":"Field name. While anything theoretical is possible we stick to letters and numbers with the first letter capitalized. Not a hard rule to accomodate existing data","example":"Form","type":"string"},"type":{"description":"Data type, from JSON spec. Can be:\n- object\n- array\n- string\n- number\n- integer\n- boolean","enum":["array","boolean","integer","number","object","string"],"example":"string","type":"string"},"uniqueitems":{"description":"Shall array members be unique","example":"true","type":"boolean"}},"required":["name","type"],"title":"Root Type for KeepField","type":"object"},"KeepFieldGroup":{"description":"A KeepFieldGroup describes the properites of a group of multi-value Notes items that form \"child records\" inside a single Notes document. Besides multi-value items, items with a common name and a counting suffix can form a field group","example":{"firstWithoutSuffix":true,"max":50,"name":"OrderLine","suffix":"_","type":"byName"},"properties":{"firstWithoutSuffix":{"description":"For name linked items, does the first have the suffix (Name_1) or not (Name)","example":"true","type":"boolean"},"max":{"description":"MAximum number of rows/item names to use","example":"42","format":"int32","type":"integer"},"name":{"description":"Name tha links this definition to fieldGroup entries in KeepFields","example":"itemLine","type":"string"},"suffix":{"description":"Separation character(s) between item name and counter","example":"_","type":"string"},"type":{"description":"How is the group formed: by multi-value or common field name with counting suffix ","enum":["byName","multiValue"],"example":"multiValue","type":"string"}},"required":["name","suffix","type"],"title":"Root Type for KeepFieldGroup","type":"object"},"KeepForm":{"description":"Definition of a Domino REST API form including form modes","properties":{"alias":{"description":"Alternate names or alias of the form.","items":{"type":"string"},"type":"array"},"fieldGroups":{"description":"Definition of fieldgroups that form detail records inside a document","items":{"$ref":"#/components/schemas/KeepFieldGroup"},"type":"array"},"formModes":{"description":"Array of FormModes configured for this database. Might be empty","items":{"$ref":"#/components/schemas/KeepFormMode"},"minItems":1,"type":"array","uniqueItems":true},"formName":{"description":"Name of the form as stored in the document, might be an alias","type":"string"}},"required":["formModes","formName"],"type":"object"},"KeepFormMode":{"description":"Form modes for Domino REST API Database config","example":{"computeWithForm":false,"deleteAccessFormula":{"formula":"@False","formulaType":"domino"},"fields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"hobbies","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"email","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"first_name","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"last_name","summaryField":true,"type":"string","uniqueitems":false}],"modeName":"default","readAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RO","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Form","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"hobbies","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"email","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"first_name","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"last_name","summaryField":true,"type":"string","uniqueitems":false}],"readAccessFormula":{"formula":"@True","formulaType":"domino"},"required":["Form","email","first_name"],"validationRules":[],"writeAccessFields":[{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","items":{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"summaryField":true,"type":"string","uniqueitems":false},"maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"hobbies","summaryField":true,"type":"array","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"Pet","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"color","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"email","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"first_name","summaryField":true,"type":"string","uniqueitems":false},{"exclusiveMinimum":-1,"fieldAccess":"RW","format":"string","maxLength":-1,"maximum":0,"minLenght":-1,"minimum":0,"minitems":-1,"name":"last_name","summaryField":true,"type":"string","uniqueitems":false}],"writeAccessFormula":{"formula":"@True","formulaType":"domino"}},"properties":{"computeWithForm":{"description":"Compute with form before saving","type":"boolean"},"deleteAccessFormula":{"$ref":"#/components/schemas/KeepFormula","description":"Formuls to determine delete access"},"fields":{"anyOf":[{"items":{"$ref":"#/components/schemas/KeepField"},"type":"array"},{"items":{"type":"string"},"type":"array"}],"description":"all fields in this mode","items":{"$ref":"#/components/schemas/KeepField"},"type":"array"},"modeName":{"description":"lowercase, name of the mode. Special names are default and odata ","type":"string"},"onLoad":{"$ref":"#/components/schemas/KeepFormula","description":"Formula to run after loading a document, before returning to the caller"},"onSave":{"$ref":"#/components/schemas/KeepFormula","description":"Formula to run after receiving a document, before save"},"readAccessFields":{"description":"read access fields in this mode","items":{"$ref":"#/components/schemas/KeepField"},"type":"array"},"readAccessFormula":{"$ref":"#/components/schemas/KeepFormula","description":"Formula to determine read access for this mode"},"required":{"description":"List of fields that are required to be provided","items":{"type":"string"},"type":"array"},"validationRules":{"description":"formula rules to determine access","items":{"$ref":"#/components/schemas/KeepFormula"},"type":"array"},"writeAccessFields":{"description":"write access fields in this mode","items":{"$ref":"#/components/schemas/KeepField"},"type":"array"},"writeAccessFormula":{"$ref":"#/components/schemas/KeepFormula","description":"Formula to determine write permissions"}},"required":["deleteAccessFormula","fields","modeName","readAccessFormula","writeAccessFormula"],"title":"Root Type for KeepFormMode","type":"object"},"KeepFormula":{"description":"Formula in a scripting environment, that can be used for true/false evaluation or as a pre-load/save execution.","example":{"formula":"@IsMember(\"[RaiseRequest]\"; @UserNamesList)","formulaType":"Domino"},"properties":{"formula":{"description":"Formula code to run","type":"string"},"formulaType":{"description":"computation model, currently Domino only","enum":["domino"],"type":"string"},"message":{"description":"Optional message to use for fasilure of formula","type":"string"}},"required":["formulaType"],"title":"Root Type for KeepFormula","type":"object"},"KeepInfo":{"description":"Basic Information about the running environment","example":{"Domino Properties":{"buildNumber":475,"fixpackNumber":0,"hotfixNumber":0,"majorVersion":12,"minorVersion":0,"productionBuild":true,"qmrNumber":2,"qmuNumber":0,"version":"12.0-2 FP: 0 HF:0"},"Keep Properties":{"image-build":"2022-07-11 16:18","keep-desc":"Next generation APIs for HCL Domino","keep-name":"HCL Domino REST API core API","keep-vendor":"HCL Labs","keep-version":"1.6.1-SNAPSHOT-463"}},"properties":{"DominoProperties":{"$ref":"#/components/schemas/KeepInfoDomino","description":"Domino build information"},"KeepProperties":{"$ref":"#/components/schemas/KeepInfoDetails","description":"Domino REST API Build information"}},"title":"Root Type for KeepInfo"},"KeepInfoDetails":{"description":"Domino REST API specific details","example":{"image-build":"2022-07-13 08:38","keep-desc":"Next generation APIs for HCL Domino","keep-name":"HCL Domino REST API core API","keep-vendor":"HCL Labs","keep-version":"1.6.1-SNAPSHOT-LocalBuild"},"properties":{"image-build":{"format":"date-time","type":"string"},"keep-desc":{"type":"string"},"keep-name":{"type":"string"},"keep-vendor":{"type":"string"},"keep-version":{"type":"string"}},"title":"Root Type for KeepInfoDetails","type":"object"},"KeepInfoDomino":{"description":"Domino part of Domino REST API info","example":{"buildNumber":475,"fixpackNumber":0,"hotfixNumber":0,"majorVersion":12,"minorVersion":0,"productionBuild":true,"qmrNumber":2,"qmuNumber":0,"version":"12.0-2 FP: 0 HF:0"},"properties":{"buildNumber":{"format":"int32","type":"integer"},"fixpackNumber":{"format":"int32","type":"integer"},"hotfixNumber":{"format":"int32","type":"integer"},"majorVersion":{"format":"int32","type":"integer"},"minorVersion":{"format":"int32","type":"integer"},"productionBuild":{"type":"boolean"},"qmrNumber":{"format":"int32","type":"integer"},"qmuNumber":{"format":"int32","type":"integer"},"version":{"type":"string"}},"title":"Root Type for KeepInfoDomino","type":"object"},"ListDesignColumn":{"description":"Describes a column within a view or folder definition","example":{"categorized":true,"direction":"ascending","name":"$4","position":1,"resort-asc":true,"resort-desc":true,"sorted":true,"title":"User Name","totalType":"none"},"properties":{"categorized":{"type":"boolean"},"direction":{"enum":["ascending","descending"],"type":"string"},"name":{"example":"$4","type":"string"},"position":{"example":"1","format":"int32","type":"integer"},"resort-asc":{"type":"boolean"},"resort-desc":{"type":"boolean"},"sorted":{"type":"boolean"},"title":{"example":"User Name","type":"string"},"totalType":{"description":"The type of totaling/averaging that this column performs","enum":["average","averagePerSubcategory","none","percent","percentOfParentCategory","total"],"type":"string"}},"title":"Root Type for ListDesignColumn","type":"object"},"ListDesignItem":{"additionalProperties":false,"description":"Result from design query. Names and uniqueIds\nTODO: Add form/view details","example":{"isFolder":false,"title":"Customers"},"properties":{"aliases":{"description":"Aliases for the view title","items":{"type":"string"},"type":"array"},"columns":{"description":"Column information with at least title","items":{"$ref":"#/components/schemas/ListDesignColumn"},"type":"array"},"isFolder":{"description":"true = it is a folder where user interaction or code determines the content\nfalse = it is a view with a fixed query, a.k.a View selection formula","type":"boolean"},"title":{"description":"Title of the view or folder","type":"string"},"type":{"description":"If design item has a type, noted here.","type":"string"},"unid":{"description":"UNID of the underlying View design element","type":"string"}},"required":["isFolder","title"],"title":"Root Type for ListDesignItem","type":"object"},"LogoutBody":{"additionalProperties":false,"description":"Code to send for logging out a current JWT based user","example":{"logout":"Yes"},"properties":{"logout":{"description":"Body to prevent an accidential logout","enum":["Yes"],"type":"string"}},"required":["logout"],"title":"Root Type for LogoutBody","type":"object"},"OAuthApplicationRequest":{"additionalProperties":false,"description":"Meta data to register an application for OAuth IdP","example":{"client_name":"My App","client_uri":"https://www.projectcastle.io/coolapp","contacts":["admin@projectcastle.io"],"description":"Super cool demo App","logo_uri":"https://www.projectcastle.io/castle.jpg","redirect_uris":["http://localhost/callback","https://domino.projectcastle.io/identity","https://www.projectcastle.io/oauth"],"scope":"demo $DECRYPT","status":"isActive","token_endpoint_auth_method":"client_secret_basic"},"properties":{"client_id":{"description":"Application ID. Empty on creation, required for update","type":"string"},"client_name":{"description":"Human readable Application name","type":"string"},"client_uri":{"description":"Start page of application. Can be used to create list of apps","type":"string"},"contacts":{"description":"URL, eMail, handles to contact people responsible for the app","items":{"type":"string"},"type":"array"},"description":{"description":"Description what the application does","type":"string"},"logo_uri":{"description":"Optional: application logo URL","type":"string"},"redirect_uris":{"description":"List of callback URLs after consent is given. Must use https with the exception of http://localhost/some_url","items":{"type":"string"},"type":"array"},"scope":{"description":"Scopes the application can (and will) request. When the application requests other scopes, token is denied","type":"string"},"status":{"description":"Is this application active","enum":["disabled","isActive"]},"token_endpoint_auth_method":{"description":"Token endpoint authentication","type":"string"}},"required":["client_name","client_uri","redirect_uris","scope"],"title":"Root Type for OAuthApplicationRequest","type":"object"},"OAuthApplicationRequestUpdate":{"additionalProperties":false,"description":"Meta data to register an application for updating OAuth IdP","example":{"client_name":"My App","client_uri":"https://www.projectcastle.io/coolapp","contacts":["admin@projectcastle.io"],"description":"Super cool demo App","logo_uri":"https://www.projectcastle.io/castle.jpg","redirect_uris":["http://localhost/callback","https://domino.projectcastle.io/identity","https://www.projectcastle.io/oauth"],"scope":"demo $DECRYPT","status":"isActive","token_endpoint_auth_method":"client_secret_basic"},"properties":{"client_id":{"description":"Internal application id. Ignored here, taken from URL query parameter","type":"string"},"client_name":{"description":"Human readable Application name","type":"string"},"client_uri":{"description":"Start page of application. Can be used to create list of apps","type":"string"},"contacts":{"description":"URL, eMail, handles to contact people responsible for the app","items":{"type":"string"},"type":"array"},"description":{"description":"Description what the application does","type":"string"},"isActive":{"description":"DEPRECATED, Don't use","type":"string"},"logo_uri":{"description":"Optional: application logo URL","type":"string"},"redirect_uris":{"description":"List of callback URLs after consent is given. Must use https with the exception of http://localhost/some_url","items":{"type":"string"},"type":"array"},"scope":{"description":"Scopes the application can (and will) request. When the application requests other scopes, token is denied","type":"string"},"status":{"description":"Is this application active","enum":["disabled","isActive"]},"token_endpoint_auth_method":{"description":"Token endpoint authentication","type":"string"}},"title":"Root Type for OAuthApplicationRequestUpdate","type":"object"},"OAuthApplicationResponse":{"additionalProperties":false,"description":"Response for registering an application for OAuth IdP","example":{"@unid":"F1490F201EB9D8C5482588B50013F519","author":"CN=John Doe/O=ProjectKeep","client_id":"429022-562b-641620","client_name":"My App","client_uri":"https://www.projectcastle.io/coolapp","contacts":["CN=John Doe/O=ProjectKeep","admin@projectcastle.io"],"description":"Super cool demo App-testupdate","hasSecret":false,"logo_uri":"http://www.projectcastle.io/castle.jpg","redirect_uris":["http://domino.projectcastle.io/identity","http://localhost/callback","http://www.projectcastle.io/oauth"],"scope":"demo $DECRYPT","status":"disabled","token_endpoint_auth_method":"client_secret_basic"},"properties":{"@author":{"description":"The person who created the external application","readOnly":true,"type":"string"},"@unid":{"description":"Universal Id of the document.","readOnly":true,"type":"string"},"client_id":{"description":"System generated client Id. Used for auth request and as user name for Token requests","type":"string"},"client_name":{"description":"Human readable Application name","type":"string"},"client_uri":{"description":"Start page of application. Can be used to create list of apps","type":"string"},"contacts":{"description":"URL, eMail, handles to contact people responsible for the app","items":{"type":"string"},"type":"array"},"description":{"description":"Desscription what the application does","type":"string"},"hasSecret":{"description":"Flag to indicate if an application has a secret configured","type":"boolean"},"logo_uri":{"description":"Optional: application logo URL","type":"string"},"redirect_uris":{"description":"List of callback URLs after consent is given. Must use https with the exception of http://localhost/some_url","items":{"type":"string"},"type":"array"},"scope":{"description":"Scopes the application can (and will) request. When the application requests other scopes, token is denied","type":"string"},"status":{"description":"Is this application active","enum":["disabled","isActive"],"type":"string"},"token_endpoint_auth_method":{"description":"Token endpoint authentication","enum":["client_secret_basic"],"type":"string"}},"required":["client_id","client_name","client_uri","redirect_uris","scope","status","token_endpoint_auth_method"],"title":"Root Type for OAuthApplicationResponse","type":"object"},"OAuthApplicationSecretRequest":{"additionalProperties":false,"description":"Meta data to generated secret for an application.","example":{"status":"isActive"},"properties":{"client_id":{"description":"Parameter to prevent error for apps that call this API. Value of this gets ignored internally. Use the path parameter for passing client_id.","type":"string"},"status":{"description":"Whether the application is active or disabled. ","enum":["disabled","isActive"],"example":"isActive","type":"string"}},"required":["status"],"title":"Root Type for OAuthApplicationSecretRequest","type":"object"},"OAuthApplicationSecretResponse":{"additionalProperties":false,"description":"Response for a client_secret request. Client seccret is returned once","example":{"client_id":"9c5fed-38c4-441808","client_secret":"7e368d-6b3b-54eda8"},"properties":{"client_id":{"description":"application ID, required as header for access","type":"string"},"client_secret":{"description":"The application secret generated by Domino REST API for the external application","type":"string"}},"required":["client_id","client_secret"],"title":"Root Type for OAuthApplicationSecretResponse","type":"object"},"ODataDbNameResponse":{"description":"Response for request of get OData service document of a database for specified form or view.","example":{"@odata.context":"http://localhost:8880/api/v1/odata/testdb/$metadata#TestForm","value":[{"@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261","@odata.etag":"W/\" 6242a8fb\"","@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261","Color":"Yellow","Form":"TestForm","Hex0040_unid":"40618262F3167AD74825881400245261","Pet":"Kelp gull","email":"patger7k@soup.io","first_name":"Pablo","gender":"Male","ip_address":"245.54.137.150","last_name":"Atger"},{"@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475","@odata.etag":"W/\" 6242aac3\"","@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475","Color":"Yellow","Form":"TestForm","Hex0040_unid":"99A6E13F05C7153F4825881400250475","Pet":"Kelp gull","email":"patger7k@soup.io","first_name":"Pablo","gender":"Male","ip_address":"245.54.137.150","last_name":"Atger"}]},"properties":{"@odata.context":{"description":"This is the context URL (see [OData-Protocol]) for the payload.","type":"string"},"value":{"description":"All the documents in OData formats. ","items":{"$ref":"#/components/schemas/ODataDocument"},"type":"array"}},"title":"Root Type for ODataDbNameResponse","type":"object"},"ODataDbResponse":{"description":"Response for request of get OData service document of a database.","example":{"@odata.context":"http://localhost:8880/api/v1/odata/testdb/$metadata","value":[{"kind":"EntitySet","name":"Entry","url":"Entry"},{"kind":"EntitySet","name":"NewForm","url":"NewForm"},{"kind":"EntitySet","name":"OdataSampleForm","url":"OdataSampleForm"},{"kind":"EntitySet","name":"SampleEntry","url":"SampleEntry"},{"kind":"EntitySet","name":"TestForm","url":"TestForm"}]},"properties":{"@odata.context":{"description":"OData metadata URI of a database.  \nOData metadata is a machine-readable description of the entity model designed to enable client consumption","type":"string"},"value":{"description":"All OData service objects of a database.","items":{"$ref":"#/components/schemas/ODataServiceObject"},"type":"array"}},"title":"Root Type for OdataDbResponse","type":"object"},"ODataDocument":{"description":"Definition for specified form or view of OData service document of a database.","example":{"@odata.editLink":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB","@odata.etag":"W/\" 62480c60\"","@odata.id":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB","Color":"Pthalo Blue","Form":"TestForm","Hex0040_unid":"3B5AD791F51B99D548258912003159EC","Pet":"American Howling Retriever","email":"wandrews@canofsleep.com","first_name":"Winslow","gender":"Male","ip_address":"192.168.1.1","last_name":"Andrews"},"properties":{"@odata.editLink":{"description":"The link used to edit/update the entity,","example":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB","type":"string"},"@odata.etag":{"description":"Weak ETag of the current document","example":"W/\\\" 6242a8fb\\\"","type":"string"},"@odata.id":{"description":"The ID of the OData entity.","example":"http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB","type":"string"},"Form":{"description":"Form name of a document","example":"Customer","type":"string"},"Hex0040_unid":{"description":"Primary key of a document, unique across NSF databases with matching replicaIds","example":"6834F14BE9CA69F68525871E00583D1B","type":"string"}},"title":"Root Type for ODataDocument","type":"object"},"ODataServiceObject":{"description":"Entity object for OData service document of a database.","example":{"kind":"EntitySet","name":"TestForm","url":"TestForm"},"properties":{"kind":{"description":"EntitySet","type":"string"},"name":{"description":"The form name. ","type":"string"},"url":{"description":"The form name currently","type":"string"}},"title":"Root Type for ODataServiceObject","type":"object"},"PreviewInfo":{"description":"Information which APIs are considered \"Priview\", so customers need to use them with care, mostly for testing","example":{"active":true,"api":"basis","description":"Create a new document for a specified form.","method":"post","operation":"createDocumentRaw","path":"/raw","summary":"Create a new document for a specified form without data conversion"},"properties":{"active":{"type":"boolean"},"api":{"type":"string"},"description":{"type":"string"},"method":{"type":"string"},"operation":{"type":"string"},"path":{"type":"string"},"summary":{"type":"string"}},"title":"Root Type for PreviewInfo","type":"object"},"QueryRequest":{"additionalProperties":false,"description":"Query and constraints for a DQL query to Domino. If not passing property 'mode', it will search from mode 'dql'. ","example":{"maxScanDocs":500000,"maxScanEntries":200000,"mode":"default","noViews":false,"query":"form = 'Customer' and Color = ?Color","timeoutSecs":300,"variables":{"Color":"Maroon","Pet":"Giraffe"},"viewRefresh":true},"properties":{"forms":{"description":"List of form names to be added to the query. Domino REST API will lookup all potential alias values and add them to the query clause","items":{"type":"string"},"type":"array"},"includeFormAlias":{"description":"If form names added to the query, this parameter will indicate whether all form alias should be included in the query clause.","type":"boolean"},"markRead":{"description":"Mark documents as read by the current user when retrieved","type":"boolean"},"maxScanDocs":{"description":"Specifies the maximum allowable number of documents scanned across all query terms. DQL execution returns an error when exceeded. Default is 500,000.","format":"int32","type":"integer"},"maxScanEntries":{"description":"Specifies the maximum allowable number of view entries scanned across all query terms. DQL execution return an error when exceeded. Default is 200,000.","format":"int32","type":"integer"},"mode":{"description":"This is form mode configured in Domino REST API for a database. If no mode has been passed, it will use default \"dql\". ","example":"dql","type":"string"},"noViews":{"description":"Specifies not to perform any view processing in satisfying a query. Default is False (off).","type":"boolean"},"query":{"description":"The DQL query snippet. ","type":"string"},"timeoutSecs":{"description":"Specifies the maximum allowable seconds a DQL query is allowed to run. DQL execution returns an error when exceeded. Default is 300 (5 minutes).","format":"int32","type":"integer"},"variables":{"description":"Key/Value to replace ?Variables in property \"query\". ","type":"object"},"viewRefresh":{"description":"Refresh a UI view to match its associated back-end view.","type":"boolean"}},"required":["query"],"title":"Root Type for QueryRequest","type":"object"},"QuickConfigParam":{"description":"Definition of request to quick config a domino database","properties":{"create":{"description":"If nsf file not exist, create one empty database or not.","type":"boolean"},"description":{"description":"Description to the configured scope","type":"string"},"icon":{"description":"Base64 of an icon. SVG preferred","type":"string"},"iconName":{"description":"alt text for icon","type":"string"},"maximumAccessLevel":{"description":"Determines the maximum ACL Level for the scope definition.\nDefault if not provided is Editor","enum":["Author","Depositor","Designer","Editor","Manager","NoAccess","Reader"],"type":"string"},"nsfPath":{"description":"path relative to Domino data directory to nsf database","type":"string"},"schemaName":{"description":"name (without .json extension) of schema file in nsf REST file resources. Default value is \"default\"","type":"string"},"scopeName":{"description":"Name that is used in ?datSsource= parameter to access configured resource","type":"string"}},"required":["nsfPath"],"type":"object"},"RestConfigShort":{"additionalProperties":false,"description":"Short summary of a rest configuration","example":{"apiName":"restcon","comment":"REST API configuration restcon2","prohibitRefresh":false,"template":""},"properties":{"apiName":{"description":"How this database is known to the API","type":"string"},"comment":{"description":"The comment assigned to the design element","type":"string"},"prohibitRefresh":{"description":"When notes database has been configured \"Inherit from the design template\", if \"Prohibit design refresh or replace to modify\" is checked, the design element will not be affected when you replace or refresh the design.","type":"boolean"},"template":{"description":"The name of the note-specific template this design element is set to derive from","type":"string"}},"title":"Root Type for RestConfigShort","type":"object"},"RestMapping":{"additionalProperties":false,"description":"Maps a rest config from its internal name to the name it is visible. Info can be seen in the Internet sites of the domino directory. Also known as scope","example":{"$Revisions":["2022-10-12T14:59:54.7+08:00","2022-10-12T15:09:02.71+08:00","2022-10-12T15:09:25.33+08:00","2022-10-12T15:09:45.99+08:00"],"$UpdatedBy":["CN=John Doe/O=ProjectKeep"],"@meta":{"addedtofile":"2022-10-12T14:59:54.7+08:00","created":"2022-10-12T14:59:54.58+08:00","lastaccessed":"2022-10-12T15:10:26.59+08:00","lastmodified":"2022-10-12T15:13:36.56+08:00","lastmodifiedinfile":"2022-10-12T15:13:36.57+08:00","noteclass":["DATA","DOCUMENT"],"noteid":2342,"revision":"000000060027B2B8482588D9","unid":"1E280A1798C5C313482588D9002671A2","unread":true},"Form":"KeepDatabase","Type":"KeepDatabase","apiName":"demoapi","createSchema":0,"description":"The famous demo database","isActive":true,"nsfPath":"Demo.nsf","schemaName":"demoapi","server":"*"},"properties":{"@Revisions":{"description":"This field records the current revision version of document. It's a 32-character hex-encoded string of date. ","example":"[\r\n    \"2022-08-03T18:10:22.72+08:00\",\r\n    \"2022-08-08T10:14:30.19+08:00\"\r\n]","items":{"type":"string"},"type":"array"},"@UpdatedBy":{"description":"The user who update the doc.","example":"[\r\n    \"CN=John Doe/O=ProjectKeep\"\r\n]","items":{"type":"string"},"type":"array"},"@meta":{"description":"Document meta data.","type":"object"},"Form":{"description":"Form name","example":"KeepDatabase","type":"string"},"Type":{"description":"","example":"KeepDatabase","type":"string"},"apiName":{"description":"Name that is used in ?datSsource= parameter to access mapped resource","pattern":"[a-z0-9]","type":"string"},"createSchema":{"description":"Default to be false if you don't set this property. It won't create the schema. When set to be true, it will create schema using given schemaName. ","type":"integer"},"description":{"description":"Human readable explanation","type":"string"},"isActive":{"description":"Allows to enable/disable API access without removing cofiguration","type":"boolean"},"maximumAccessLevel":{"description":"Limits, but not extends the access level granted to an API user.\nMirrors the MaximumInternetAccess in DB ACLs.\nDefault if not provided is Editor","enum":["Author","Depositor","Designer","Editor","Manager","NoAccess","Reader"],"type":"string"},"nsfPath":{"description":"path relative to Domino data directory to nsf database","type":"string"},"schemaName":{"description":"name (without .json extension) of schema file in nsf REST file resources","pattern":"[a-z0-9]","type":"string"},"server":{"description":"Domino server name that this scope is enabled on. Empty or '*' mean that this scope is enabled on all Domino servers. ","type":"string"}},"required":["apiName","isActive","nsfPath","schemaName"],"title":"Root Type for RestMapping","type":"object"},"RichTextRepresentation":{"description":"Format of RichText ","enum":["html","markdown","mime","plain"],"title":"Root Type for RichTextRepresentation","type":"string"},"ScopeAccessUserEntry":{"description":"Details of the current User Entry for a specific Database.","example":{"Flags":["AUTHOR_NOCREATE","NODELETE"],"Level":"MANAGER","Roles":["Admin"],"User":"LocalDomainAdmins"},"properties":{"Flags":{"description":"Specifies what the current user are capable of doing on the Domino REST API database","items":{"type":"string"},"type":"array"},"Level":{"description":"ACL Level of the current logged in user","type":"string"},"Roles":{"description":"All of the roles of the current user logged in on the Domino REST API database","items":{"type":"string"},"type":"array"},"User":{"description":"Current user logged in","type":"string"}},"title":"Root Type for scopeAccessUserEntry","type":"object"},"StatusMessage":{"description":"Keep-formatted status message","example":{"message":"deletion complete","status":"OK","statusCode":200,"unid":"61CCE871E79E8DDB8025852F004DFF2D"},"properties":{"details":{"description":"Json Object containing further details, if appropriate","type":"string"},"message":{"description":"Short descriptive message","type":"string"},"status":{"description":"Success / failure status","type":"string"},"statusCode":{"description":"HTTP status code","format":"int32","type":"integer"},"unid":{"$ref":"#/components/schemas/Unid","description":"Document primary key"}},"required":["message","status","statusCode"],"title":"Root Type for StatusMessage","type":"object"},"Unid":{"description":"32 char universalId A-Z0-9, primary key unique across replicas","example":"6834F14BE9CA69F68525871E00583D1B","maxLength":32,"minLength":32,"pattern":"[0-9A-F]*","readOnly":true,"type":"string"},"UnidWritable":{"description":"32 char universalId A-Z0-9, primary key unique across replicas","example":"6834F14BE9CA69F68525871E00583D1B","maxLength":32,"minLength":32,"pattern":"[0-9A-F]*","readOnly":false,"type":"string"},"UserInfo":{"description":"Provies information about the user, their groups, where the msil file is","example":{"email":"janedoe@example.com","family_name":"Doe","given_name":"Jane","mailFile":"mail/dnotes.nsf","mailServer":"CN=frascati.projectkeep.io/O=ProjectKeep","name":"CN=Jane Doe/O=SomeOrg","names":["*","*/O=SomeOrg","CN=Jane Doe/O=SomeOrg","ExampleGroup","Jane Doe"],"preferred_username":"j.doe","scope":"MAIL $DATA $DECRYPT","sub":"CN=Jane Doe/O=SomeOrg"},"properties":{"email":{"type":"string"},"family_name":{"description":"User's family name, if known","type":"string"},"given_name":{"description":"User's given name, if known","type":"string"},"mailFile":{"type":"string"},"mailServer":{"type":"string"},"name":{"description":"User name","type":"string"},"names":{"items":{"type":"string"},"type":"array"},"preferred_username":{"description":"A short username suitable for a new-account creation hint","type":"string"},"scope":{"type":"string"},"sub":{"description":"Subject full username","type":"string"}},"required":["sub"],"title":"Root Type for UserInfo","type":"object"},"ViewInfo":{"description":"","example":{"alias":["Kunden","ग्राहकों"],"name":"(Customers)","unid":"ABCD12345"},"properties":{"alias":{"description":"Collection of alternate names, might match aliases of the Domino design","items":{"type":"string"},"type":"array"},"name":{"description":"Name of the view, matches design","type":"string"},"unid":{"description":"Primary key to find the view","type":"string"}},"title":"Root Type for ViewInfo","type":"object"}},"securitySchemes":{"basic":{"description":"Basic authentication for Excel oData feed","scheme":"basic","type":"http"},"jwt":{"description":"Token based auth (preferred)","scheme":"bearer","type":"http"}}},"security":[{"basic":[]},{"jwt":[]},{}],"tags":[{"description":"CRUD of Domino NoSQL data in JSON format. Workhorse APIs, used by applications to operate","name":"data"},{"description":"Endpoints serving OData compliant information","name":"odata"},{"description":"Endpoints to retrieve information about scopes. Domino databases are made known through a scope that defines access to forms, fields, views and agents. Readable by mortal users","name":"scope"},{"description":"The endpoints are for retrieving information on the current user, retrieve all oauth-configured applications and information about the current Domino and Domino REST API","name":"admin"},{"description":"URL Endpoints to get access to the system","name":"authentication"},{"description":"URL Endpoints to run code against data","name":"code"}]}